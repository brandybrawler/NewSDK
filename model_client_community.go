/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientCommunity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientCommunity{}

// ClientCommunity struct for ClientCommunity
type ClientCommunity struct {
	Id int32 `json:"id"`
	Username string `json:"username"`
	Email string `json:"email"`
	FirstName string `json:"first_name"`
	LastName string `json:"last_name"`
}

type _ClientCommunity ClientCommunity

// NewClientCommunity instantiates a new ClientCommunity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientCommunity(id int32, username string, email string, firstName string, lastName string) *ClientCommunity {
	this := ClientCommunity{}
	this.Id = id
	this.Username = username
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewClientCommunityWithDefaults instantiates a new ClientCommunity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientCommunityWithDefaults() *ClientCommunity {
	this := ClientCommunity{}
	return &this
}

// GetId returns the Id field value
func (o *ClientCommunity) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ClientCommunity) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ClientCommunity) SetId(v int32) {
	o.Id = v
}

// GetUsername returns the Username field value
func (o *ClientCommunity) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ClientCommunity) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ClientCommunity) SetUsername(v string) {
	o.Username = v
}

// GetEmail returns the Email field value
func (o *ClientCommunity) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ClientCommunity) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ClientCommunity) SetEmail(v string) {
	o.Email = v
}

// GetFirstName returns the FirstName field value
func (o *ClientCommunity) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *ClientCommunity) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *ClientCommunity) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *ClientCommunity) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *ClientCommunity) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *ClientCommunity) SetLastName(v string) {
	o.LastName = v
}

func (o ClientCommunity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCommunity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["username"] = o.Username
	toSerialize["email"] = o.Email
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	return toSerialize, nil
}

func (o *ClientCommunity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"username",
		"email",
		"first_name",
		"last_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientCommunity := _ClientCommunity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientCommunity)

	if err != nil {
		return err
	}

	*o = ClientCommunity(varClientCommunity)

	return err
}

type NullableClientCommunity struct {
	value *ClientCommunity
	isSet bool
}

func (v NullableClientCommunity) Get() *ClientCommunity {
	return v.value
}

func (v *NullableClientCommunity) Set(val *ClientCommunity) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCommunity) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCommunity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCommunity(val *ClientCommunity) *NullableClientCommunity {
	return &NullableClientCommunity{value: val, isSet: true}
}

func (v NullableClientCommunity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCommunity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


