/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PatchedServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedServiceRequest{}

// PatchedServiceRequest struct for PatchedServiceRequest
type PatchedServiceRequest struct {
	CreatedAt NullableString `json:"created_at,omitempty"`
	ServiceRequestsId *int32 `json:"service_requests_id,omitempty"`
	Client *ClientServicesInfo `json:"client,omitempty"`
	UnauthenticatedUser *AnonymousUser `json:"unauthenticated_user,omitempty"`
	Service *Service `json:"service,omitempty"`
	// Status of the request.  * `pending` - Pending * `completed` - Completed * `in_progress` - In Progress
	Status *ServiceRequestStatusEnum `json:"status,omitempty"`
	// Specific request details in JSON format.
	RequestDetails interface{} `json:"request_details,omitempty"`
	// A json dump of the ai content generated
	AiInfo interface{} `json:"ai_info,omitempty"`
	ServiceActionPlanResponse interface{} `json:"service_action_plan_response,omitempty"`
}

// NewPatchedServiceRequest instantiates a new PatchedServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedServiceRequest() *PatchedServiceRequest {
	this := PatchedServiceRequest{}
	return &this
}

// NewPatchedServiceRequestWithDefaults instantiates a new PatchedServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedServiceRequestWithDefaults() *PatchedServiceRequest {
	this := PatchedServiceRequest{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedServiceRequest) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedServiceRequest) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *PatchedServiceRequest) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *PatchedServiceRequest) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *PatchedServiceRequest) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetServiceRequestsId returns the ServiceRequestsId field value if set, zero value otherwise.
func (o *PatchedServiceRequest) GetServiceRequestsId() int32 {
	if o == nil || IsNil(o.ServiceRequestsId) {
		var ret int32
		return ret
	}
	return *o.ServiceRequestsId
}

// GetServiceRequestsIdOk returns a tuple with the ServiceRequestsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedServiceRequest) GetServiceRequestsIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceRequestsId) {
		return nil, false
	}
	return o.ServiceRequestsId, true
}

// HasServiceRequestsId returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasServiceRequestsId() bool {
	if o != nil && !IsNil(o.ServiceRequestsId) {
		return true
	}

	return false
}

// SetServiceRequestsId gets a reference to the given int32 and assigns it to the ServiceRequestsId field.
func (o *PatchedServiceRequest) SetServiceRequestsId(v int32) {
	o.ServiceRequestsId = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *PatchedServiceRequest) GetClient() ClientServicesInfo {
	if o == nil || IsNil(o.Client) {
		var ret ClientServicesInfo
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedServiceRequest) GetClientOk() (*ClientServicesInfo, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given ClientServicesInfo and assigns it to the Client field.
func (o *PatchedServiceRequest) SetClient(v ClientServicesInfo) {
	o.Client = &v
}

// GetUnauthenticatedUser returns the UnauthenticatedUser field value if set, zero value otherwise.
func (o *PatchedServiceRequest) GetUnauthenticatedUser() AnonymousUser {
	if o == nil || IsNil(o.UnauthenticatedUser) {
		var ret AnonymousUser
		return ret
	}
	return *o.UnauthenticatedUser
}

// GetUnauthenticatedUserOk returns a tuple with the UnauthenticatedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedServiceRequest) GetUnauthenticatedUserOk() (*AnonymousUser, bool) {
	if o == nil || IsNil(o.UnauthenticatedUser) {
		return nil, false
	}
	return o.UnauthenticatedUser, true
}

// HasUnauthenticatedUser returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasUnauthenticatedUser() bool {
	if o != nil && !IsNil(o.UnauthenticatedUser) {
		return true
	}

	return false
}

// SetUnauthenticatedUser gets a reference to the given AnonymousUser and assigns it to the UnauthenticatedUser field.
func (o *PatchedServiceRequest) SetUnauthenticatedUser(v AnonymousUser) {
	o.UnauthenticatedUser = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *PatchedServiceRequest) GetService() Service {
	if o == nil || IsNil(o.Service) {
		var ret Service
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedServiceRequest) GetServiceOk() (*Service, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given Service and assigns it to the Service field.
func (o *PatchedServiceRequest) SetService(v Service) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedServiceRequest) GetStatus() ServiceRequestStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret ServiceRequestStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedServiceRequest) GetStatusOk() (*ServiceRequestStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceRequestStatusEnum and assigns it to the Status field.
func (o *PatchedServiceRequest) SetStatus(v ServiceRequestStatusEnum) {
	o.Status = &v
}

// GetRequestDetails returns the RequestDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedServiceRequest) GetRequestDetails() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RequestDetails
}

// GetRequestDetailsOk returns a tuple with the RequestDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedServiceRequest) GetRequestDetailsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RequestDetails) {
		return nil, false
	}
	return &o.RequestDetails, true
}

// HasRequestDetails returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasRequestDetails() bool {
	if o != nil && !IsNil(o.RequestDetails) {
		return true
	}

	return false
}

// SetRequestDetails gets a reference to the given interface{} and assigns it to the RequestDetails field.
func (o *PatchedServiceRequest) SetRequestDetails(v interface{}) {
	o.RequestDetails = v
}

// GetAiInfo returns the AiInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedServiceRequest) GetAiInfo() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AiInfo
}

// GetAiInfoOk returns a tuple with the AiInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedServiceRequest) GetAiInfoOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AiInfo) {
		return nil, false
	}
	return &o.AiInfo, true
}

// HasAiInfo returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasAiInfo() bool {
	if o != nil && !IsNil(o.AiInfo) {
		return true
	}

	return false
}

// SetAiInfo gets a reference to the given interface{} and assigns it to the AiInfo field.
func (o *PatchedServiceRequest) SetAiInfo(v interface{}) {
	o.AiInfo = v
}

// GetServiceActionPlanResponse returns the ServiceActionPlanResponse field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedServiceRequest) GetServiceActionPlanResponse() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ServiceActionPlanResponse
}

// GetServiceActionPlanResponseOk returns a tuple with the ServiceActionPlanResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedServiceRequest) GetServiceActionPlanResponseOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ServiceActionPlanResponse) {
		return nil, false
	}
	return &o.ServiceActionPlanResponse, true
}

// HasServiceActionPlanResponse returns a boolean if a field has been set.
func (o *PatchedServiceRequest) HasServiceActionPlanResponse() bool {
	if o != nil && !IsNil(o.ServiceActionPlanResponse) {
		return true
	}

	return false
}

// SetServiceActionPlanResponse gets a reference to the given interface{} and assigns it to the ServiceActionPlanResponse field.
func (o *PatchedServiceRequest) SetServiceActionPlanResponse(v interface{}) {
	o.ServiceActionPlanResponse = v
}

func (o PatchedServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if !IsNil(o.ServiceRequestsId) {
		toSerialize["service_requests_id"] = o.ServiceRequestsId
	}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.UnauthenticatedUser) {
		toSerialize["unauthenticated_user"] = o.UnauthenticatedUser
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.RequestDetails != nil {
		toSerialize["request_details"] = o.RequestDetails
	}
	if o.AiInfo != nil {
		toSerialize["ai_info"] = o.AiInfo
	}
	if o.ServiceActionPlanResponse != nil {
		toSerialize["service_action_plan_response"] = o.ServiceActionPlanResponse
	}
	return toSerialize, nil
}

type NullablePatchedServiceRequest struct {
	value *PatchedServiceRequest
	isSet bool
}

func (v NullablePatchedServiceRequest) Get() *PatchedServiceRequest {
	return v.value
}

func (v *NullablePatchedServiceRequest) Set(val *PatchedServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedServiceRequest(val *PatchedServiceRequest) *NullablePatchedServiceRequest {
	return &NullablePatchedServiceRequest{value: val, isSet: true}
}

func (v NullablePatchedServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


