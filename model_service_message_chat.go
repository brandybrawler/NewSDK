/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceMessageChat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMessageChat{}

// ServiceMessageChat struct for ServiceMessageChat
type ServiceMessageChat struct {
	ServiceRequestMessageId int32 `json:"service_request_message_id"`
	// The chat this message is a part of.
	ServiceRequestChat int32 `json:"service_request_chat"`
	// The content of the message.
	MessageContent string `json:"message_content"`
	// Either the message is sent by the agent or by the tenant  * `client` - client * `tenant` - tenant * `tenant_iva` - tenant_iva * `anonymous_client` - anonymous_client
	MessageSender MessageSenderEnum `json:"message_sender"`
}

type _ServiceMessageChat ServiceMessageChat

// NewServiceMessageChat instantiates a new ServiceMessageChat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMessageChat(serviceRequestMessageId int32, serviceRequestChat int32, messageContent string, messageSender MessageSenderEnum) *ServiceMessageChat {
	this := ServiceMessageChat{}
	this.ServiceRequestMessageId = serviceRequestMessageId
	this.ServiceRequestChat = serviceRequestChat
	this.MessageContent = messageContent
	this.MessageSender = messageSender
	return &this
}

// NewServiceMessageChatWithDefaults instantiates a new ServiceMessageChat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMessageChatWithDefaults() *ServiceMessageChat {
	this := ServiceMessageChat{}
	return &this
}

// GetServiceRequestMessageId returns the ServiceRequestMessageId field value
func (o *ServiceMessageChat) GetServiceRequestMessageId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceRequestMessageId
}

// GetServiceRequestMessageIdOk returns a tuple with the ServiceRequestMessageId field value
// and a boolean to check if the value has been set.
func (o *ServiceMessageChat) GetServiceRequestMessageIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceRequestMessageId, true
}

// SetServiceRequestMessageId sets field value
func (o *ServiceMessageChat) SetServiceRequestMessageId(v int32) {
	o.ServiceRequestMessageId = v
}

// GetServiceRequestChat returns the ServiceRequestChat field value
func (o *ServiceMessageChat) GetServiceRequestChat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceRequestChat
}

// GetServiceRequestChatOk returns a tuple with the ServiceRequestChat field value
// and a boolean to check if the value has been set.
func (o *ServiceMessageChat) GetServiceRequestChatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceRequestChat, true
}

// SetServiceRequestChat sets field value
func (o *ServiceMessageChat) SetServiceRequestChat(v int32) {
	o.ServiceRequestChat = v
}

// GetMessageContent returns the MessageContent field value
func (o *ServiceMessageChat) GetMessageContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageContent
}

// GetMessageContentOk returns a tuple with the MessageContent field value
// and a boolean to check if the value has been set.
func (o *ServiceMessageChat) GetMessageContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageContent, true
}

// SetMessageContent sets field value
func (o *ServiceMessageChat) SetMessageContent(v string) {
	o.MessageContent = v
}

// GetMessageSender returns the MessageSender field value
func (o *ServiceMessageChat) GetMessageSender() MessageSenderEnum {
	if o == nil {
		var ret MessageSenderEnum
		return ret
	}

	return o.MessageSender
}

// GetMessageSenderOk returns a tuple with the MessageSender field value
// and a boolean to check if the value has been set.
func (o *ServiceMessageChat) GetMessageSenderOk() (*MessageSenderEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageSender, true
}

// SetMessageSender sets field value
func (o *ServiceMessageChat) SetMessageSender(v MessageSenderEnum) {
	o.MessageSender = v
}

func (o ServiceMessageChat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMessageChat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service_request_message_id"] = o.ServiceRequestMessageId
	toSerialize["service_request_chat"] = o.ServiceRequestChat
	toSerialize["message_content"] = o.MessageContent
	toSerialize["message_sender"] = o.MessageSender
	return toSerialize, nil
}

func (o *ServiceMessageChat) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service_request_message_id",
		"service_request_chat",
		"message_content",
		"message_sender",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceMessageChat := _ServiceMessageChat{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceMessageChat)

	if err != nil {
		return err
	}

	*o = ServiceMessageChat(varServiceMessageChat)

	return err
}

type NullableServiceMessageChat struct {
	value *ServiceMessageChat
	isSet bool
}

func (v NullableServiceMessageChat) Get() *ServiceMessageChat {
	return v.value
}

func (v *NullableServiceMessageChat) Set(val *ServiceMessageChat) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMessageChat) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMessageChat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMessageChat(val *ServiceMessageChat) *NullableServiceMessageChat {
	return &NullableServiceMessageChat{value: val, isSet: true}
}

func (v NullableServiceMessageChat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMessageChat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


