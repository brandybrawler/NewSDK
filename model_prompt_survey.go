/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PromptSurvey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromptSurvey{}

// PromptSurvey struct for PromptSurvey
type PromptSurvey struct {
	// The lilling details id ID UUID
	PromptSurveyId int32 `json:"prompt_survey_id"`
	TenantId int32 `json:"tenant_id"`
	// The survey topic
	SurveyTopic string `json:"survey_topic"`
	// The survey description
	SurveyDescription string `json:"survey_description"`
	// The survey context
	SurveyPrompt string `json:"survey_prompt"`
	// The survey questions
	SurveyQuestions interface{} `json:"survey_questions,omitempty"`
	Client Client `json:"client"`
	UnauthenticatedClient AnonymousUser `json:"unauthenticated_client"`
	SurveyType NullablePromptSurveySurveyType `json:"survey_type,omitempty"`
}

type _PromptSurvey PromptSurvey

// NewPromptSurvey instantiates a new PromptSurvey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromptSurvey(promptSurveyId int32, tenantId int32, surveyTopic string, surveyDescription string, surveyPrompt string, client Client, unauthenticatedClient AnonymousUser) *PromptSurvey {
	this := PromptSurvey{}
	this.PromptSurveyId = promptSurveyId
	this.TenantId = tenantId
	this.SurveyTopic = surveyTopic
	this.SurveyDescription = surveyDescription
	this.SurveyPrompt = surveyPrompt
	this.Client = client
	this.UnauthenticatedClient = unauthenticatedClient
	return &this
}

// NewPromptSurveyWithDefaults instantiates a new PromptSurvey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromptSurveyWithDefaults() *PromptSurvey {
	this := PromptSurvey{}
	return &this
}

// GetPromptSurveyId returns the PromptSurveyId field value
func (o *PromptSurvey) GetPromptSurveyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PromptSurveyId
}

// GetPromptSurveyIdOk returns a tuple with the PromptSurveyId field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetPromptSurveyIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromptSurveyId, true
}

// SetPromptSurveyId sets field value
func (o *PromptSurvey) SetPromptSurveyId(v int32) {
	o.PromptSurveyId = v
}

// GetTenantId returns the TenantId field value
func (o *PromptSurvey) GetTenantId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetTenantIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *PromptSurvey) SetTenantId(v int32) {
	o.TenantId = v
}

// GetSurveyTopic returns the SurveyTopic field value
func (o *PromptSurvey) GetSurveyTopic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SurveyTopic
}

// GetSurveyTopicOk returns a tuple with the SurveyTopic field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetSurveyTopicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SurveyTopic, true
}

// SetSurveyTopic sets field value
func (o *PromptSurvey) SetSurveyTopic(v string) {
	o.SurveyTopic = v
}

// GetSurveyDescription returns the SurveyDescription field value
func (o *PromptSurvey) GetSurveyDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SurveyDescription
}

// GetSurveyDescriptionOk returns a tuple with the SurveyDescription field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetSurveyDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SurveyDescription, true
}

// SetSurveyDescription sets field value
func (o *PromptSurvey) SetSurveyDescription(v string) {
	o.SurveyDescription = v
}

// GetSurveyPrompt returns the SurveyPrompt field value
func (o *PromptSurvey) GetSurveyPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SurveyPrompt
}

// GetSurveyPromptOk returns a tuple with the SurveyPrompt field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetSurveyPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SurveyPrompt, true
}

// SetSurveyPrompt sets field value
func (o *PromptSurvey) SetSurveyPrompt(v string) {
	o.SurveyPrompt = v
}

// GetSurveyQuestions returns the SurveyQuestions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PromptSurvey) GetSurveyQuestions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SurveyQuestions
}

// GetSurveyQuestionsOk returns a tuple with the SurveyQuestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PromptSurvey) GetSurveyQuestionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SurveyQuestions) {
		return nil, false
	}
	return &o.SurveyQuestions, true
}

// HasSurveyQuestions returns a boolean if a field has been set.
func (o *PromptSurvey) HasSurveyQuestions() bool {
	if o != nil && !IsNil(o.SurveyQuestions) {
		return true
	}

	return false
}

// SetSurveyQuestions gets a reference to the given interface{} and assigns it to the SurveyQuestions field.
func (o *PromptSurvey) SetSurveyQuestions(v interface{}) {
	o.SurveyQuestions = v
}

// GetClient returns the Client field value
func (o *PromptSurvey) GetClient() Client {
	if o == nil {
		var ret Client
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetClientOk() (*Client, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *PromptSurvey) SetClient(v Client) {
	o.Client = v
}

// GetUnauthenticatedClient returns the UnauthenticatedClient field value
func (o *PromptSurvey) GetUnauthenticatedClient() AnonymousUser {
	if o == nil {
		var ret AnonymousUser
		return ret
	}

	return o.UnauthenticatedClient
}

// GetUnauthenticatedClientOk returns a tuple with the UnauthenticatedClient field value
// and a boolean to check if the value has been set.
func (o *PromptSurvey) GetUnauthenticatedClientOk() (*AnonymousUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnauthenticatedClient, true
}

// SetUnauthenticatedClient sets field value
func (o *PromptSurvey) SetUnauthenticatedClient(v AnonymousUser) {
	o.UnauthenticatedClient = v
}

// GetSurveyType returns the SurveyType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PromptSurvey) GetSurveyType() PromptSurveySurveyType {
	if o == nil || IsNil(o.SurveyType.Get()) {
		var ret PromptSurveySurveyType
		return ret
	}
	return *o.SurveyType.Get()
}

// GetSurveyTypeOk returns a tuple with the SurveyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PromptSurvey) GetSurveyTypeOk() (*PromptSurveySurveyType, bool) {
	if o == nil {
		return nil, false
	}
	return o.SurveyType.Get(), o.SurveyType.IsSet()
}

// HasSurveyType returns a boolean if a field has been set.
func (o *PromptSurvey) HasSurveyType() bool {
	if o != nil && o.SurveyType.IsSet() {
		return true
	}

	return false
}

// SetSurveyType gets a reference to the given NullablePromptSurveySurveyType and assigns it to the SurveyType field.
func (o *PromptSurvey) SetSurveyType(v PromptSurveySurveyType) {
	o.SurveyType.Set(&v)
}
// SetSurveyTypeNil sets the value for SurveyType to be an explicit nil
func (o *PromptSurvey) SetSurveyTypeNil() {
	o.SurveyType.Set(nil)
}

// UnsetSurveyType ensures that no value is present for SurveyType, not even an explicit nil
func (o *PromptSurvey) UnsetSurveyType() {
	o.SurveyType.Unset()
}

func (o PromptSurvey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromptSurvey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["prompt_survey_id"] = o.PromptSurveyId
	toSerialize["tenant_id"] = o.TenantId
	toSerialize["survey_topic"] = o.SurveyTopic
	toSerialize["survey_description"] = o.SurveyDescription
	toSerialize["survey_prompt"] = o.SurveyPrompt
	if o.SurveyQuestions != nil {
		toSerialize["survey_questions"] = o.SurveyQuestions
	}
	toSerialize["client"] = o.Client
	toSerialize["unauthenticated_client"] = o.UnauthenticatedClient
	if o.SurveyType.IsSet() {
		toSerialize["survey_type"] = o.SurveyType.Get()
	}
	return toSerialize, nil
}

func (o *PromptSurvey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"prompt_survey_id",
		"tenant_id",
		"survey_topic",
		"survey_description",
		"survey_prompt",
		"client",
		"unauthenticated_client",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromptSurvey := _PromptSurvey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPromptSurvey)

	if err != nil {
		return err
	}

	*o = PromptSurvey(varPromptSurvey)

	return err
}

type NullablePromptSurvey struct {
	value *PromptSurvey
	isSet bool
}

func (v NullablePromptSurvey) Get() *PromptSurvey {
	return v.value
}

func (v *NullablePromptSurvey) Set(val *PromptSurvey) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptSurvey) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptSurvey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptSurvey(val *PromptSurvey) *NullablePromptSurvey {
	return &NullablePromptSurvey{value: val, isSet: true}
}

func (v NullablePromptSurvey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptSurvey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


