/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ServiceRequestStatusEnum * `pending` - Pending * `completed` - Completed * `in_progress` - In Progress
type ServiceRequestStatusEnum string

// List of ServiceRequestStatusEnum
const (
	PENDING ServiceRequestStatusEnum = "pending"
	COMPLETED ServiceRequestStatusEnum = "completed"
	IN_PROGRESS ServiceRequestStatusEnum = "in_progress"
)

// All allowed values of ServiceRequestStatusEnum enum
var AllowedServiceRequestStatusEnumEnumValues = []ServiceRequestStatusEnum{
	"pending",
	"completed",
	"in_progress",
}

func (v *ServiceRequestStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceRequestStatusEnum(value)
	for _, existing := range AllowedServiceRequestStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceRequestStatusEnum", value)
}

// NewServiceRequestStatusEnumFromValue returns a pointer to a valid ServiceRequestStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceRequestStatusEnumFromValue(v string) (*ServiceRequestStatusEnum, error) {
	ev := ServiceRequestStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceRequestStatusEnum: valid values are %v", v, AllowedServiceRequestStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceRequestStatusEnum) IsValid() bool {
	for _, existing := range AllowedServiceRequestStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceRequestStatusEnum value
func (v ServiceRequestStatusEnum) Ptr() *ServiceRequestStatusEnum {
	return &v
}

type NullableServiceRequestStatusEnum struct {
	value *ServiceRequestStatusEnum
	isSet bool
}

func (v NullableServiceRequestStatusEnum) Get() *ServiceRequestStatusEnum {
	return v.value
}

func (v *NullableServiceRequestStatusEnum) Set(val *ServiceRequestStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRequestStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRequestStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRequestStatusEnum(val *ServiceRequestStatusEnum) *NullableServiceRequestStatusEnum {
	return &NullableServiceRequestStatusEnum{value: val, isSet: true}
}

func (v NullableServiceRequestStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRequestStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

