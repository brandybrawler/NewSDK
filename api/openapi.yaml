openapi: 3.0.3
info:
  title: proxima-core-engine
  version: 0.1.2
servers:
- url: https://core.proximaai.co
paths:
  /api/aiapp/intent/:
    post:
      description: |-
        POST
        Classify Intent
      operationId: aiapp_intent_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/leadcategorization/:
    post:
      operationId: aiapp_leadcategorization_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/paraphrase/:
    post:
      description: |-
        POST
        Summarize a given context
      operationId: aiapp_paraphrase_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/sentimentanalysis/:
    post:
      operationId: aiapp_sentimentanalysis_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/summarize/:
    post:
      description: |-
        POST
        Summarize a given context
      operationId: aiapp_summarize_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/survey/:
    post:
      description: |-
        POST
        Summarize a given context
      operationId: aiapp_survey_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/aiapp/translation/:
    post:
      operationId: aiapp_translation_create
      responses:
        "200":
          description: No response body
      tags:
      - aiapp
  /api/analytics/annual_groth_rate/:
    get:
      operationId: analytics_annual_groth_rate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/averagecomments/:
    get:
      operationId: analytics_averagecomments_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/averagedistribution/:
    get:
      operationId: analytics_averagedistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/averageresponsetime/:
    get:
      operationId: analytics_averageresponsetime_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/averagesurveyrunperiod/:
    get:
      operationId: analytics_averagesurveyrunperiod_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/averagevoicemessageperchat/:
    get:
      operationId: analytics_averagevoicemessageperchat_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/clientcitydistribution/:
    get:
      operationId: analytics_clientcitydistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/clientdailysatisfaction/:
    get:
      operationId: analytics_clientdailysatisfaction_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/clientsatisfaction/:
    get:
      operationId: analytics_clientsatisfaction_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/clientsaverageage/:
    get:
      operationId: analytics_clientsaverageage_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/clientweeklysatisfaction/:
    get:
      operationId: analytics_clientweeklysatisfaction_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/commentsuserrelation/:
    get:
      operationId: analytics_commentsuserrelation_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/communicationchannels/:
    get:
      operationId: analytics_communicationchannels_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/communitygrowthrate/:
    get:
      operationId: analytics_communitygrowthrate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/communitymembers/:
    get:
      operationId: analytics_communitymembers_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/communityrating/:
    get:
      operationId: analytics_communityrating_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/countchats/:
    get:
      operationId: analytics_countchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/countescalatedchats/:
    get:
      description: A view to count the number of escalated messages for a given tenant.
      operationId: analytics_countescalatedchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/counthourlychats/:
    get:
      operationId: analytics_counthourlychats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/countrydistribution/:
    get:
      operationId: analytics_countrydistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/cumulativecomments/:
    get:
      operationId: analytics_cumulativecomments_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/cumulativehourlychats/:
    get:
      operationId: analytics_cumulativehourlychats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/cumulativeissues/:
    get:
      operationId: analytics_cumulativeissues_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/cumulativevoicemessage/:
    get:
      operationId: analytics_cumulativevoicemessage_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/dailyaverageresponserate/:
    get:
      operationId: analytics_dailyaverageresponserate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/dailychatcount/:
    get:
      operationId: analytics_dailychatcount_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/dailyescalatedchats/:
    get:
      operationId: analytics_dailyescalatedchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/engagementfrequency/:
    get:
      operationId: analytics_engagementfrequency_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/genderdistribution/:
    get:
      operationId: analytics_genderdistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/geolocation/:
    get:
      operationId: analytics_geolocation_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/hourlyaverageresponsetime/:
    get:
      operationId: analytics_hourlyaverageresponsetime_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/hourlyclientsatisfaction/:
    get:
      operationId: analytics_hourlyclientsatisfaction_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/hourlycountescalatedchats/:
    get:
      operationId: analytics_hourlycountescalatedchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/issueuserrelation/:
    get:
      operationId: analytics_issueuserrelation_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/leasttopics/:
    get:
      operationId: analytics_leasttopics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/populartopics/:
    get:
      operationId: analytics_populartopics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/statedistribution/:
    get:
      operationId: analytics_statedistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/surveyaveragetargetaudience/:
    get:
      operationId: analytics_surveyaveragetargetaudience_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/surveyratings/:
    get:
      operationId: analytics_surveyratings_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/surveyresponserate/:
    get:
      operationId: analytics_surveyresponserate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/totalsurveys/:
    get:
      operationId: analytics_totalsurveys_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/uniquecomments/:
    get:
      operationId: analytics_uniquecomments_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/usersegmentation/:
    get:
      operationId: analytics_usersegmentation_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/voive_messages_last_week/:
    get:
      operationId: analytics_voive_messages_last_week_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/voive_messages_lastday/:
    get:
      operationId: analytics_voive_messages_lastday_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/voive_messages_lasthour/:
    get:
      operationId: analytics_voive_messages_lasthour_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/weeklyaverageresponserate/:
    get:
      operationId: analytics_weeklyaverageresponserate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/weeklychatcount/:
    get:
      operationId: analytics_weeklychatcount_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/analytics/weeklyescalatedchats/:
    get:
      operationId: analytics_weeklyescalatedchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - analytics
  /api/auth/admin/:
    post:
      description: This endpoint is to allow to allow an  admin user belonging to
        a tenant to be created
      operationId: auth_admin_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Admin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Admin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/adminverificationconfirmation/{uidb64}/:
    get:
      operationId: auth_adminverificationconfirmation_retrieve
      parameters:
      - explode: false
        in: path
        name: uidb64
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/adminverificationrequest/:
    post:
      operationId: auth_adminverificationrequest_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/anonymoususer/:
    delete:
      description: |-
        DELETE
        Remove a anonymoususer from the database.

        Params (all required):
        contact
      operationId: auth_anonymoususer_destroy
      responses:
        "204":
          description: No response body
      security:
      - {}
      tags:
      - auth
    get:
      description: |-
        GET
        Retrieve AnonymousUsers matching query.

        Params:
        contact
      operationId: auth_anonymoususer_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymousUser'
          description: ""
      security:
      - {}
      tags:
      - auth
    post:
      description: |-
        POST
        Add an anonymous user to the database.

        Params:
        - contact
      operationId: auth_anonymoususer_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnonymousUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnonymousUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnonymousUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymousUser'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/auth/google/:
    post:
      operationId: auth_auth_google_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/client/:
    post:
      description: This endpoint is to allow to allow an  client user to be created
      operationId: auth_client_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/client_users_signup_signin/:
    post:
      operationId: auth_client_users_signup_signin_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/clientverificationconfirmation/{uidb64}/:
    get:
      operationId: auth_clientverificationconfirmation_retrieve
      parameters:
      - explode: false
        in: path
        name: uidb64
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/clientverificationrequest/:
    post:
      operationId: auth_clientverificationrequest_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/employee/:
    post:
      description: This endpoint is to allow to allow an  employee user belonging
        to a tenant to be created
      operationId: auth_employee_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/employeeverificationconfirmation/{uidb64}/:
    get:
      operationId: auth_employeeverificationconfirmation_retrieve
      parameters:
      - explode: false
        in: path
        name: uidb64
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/employeeverificationrequest/:
    post:
      operationId: auth_employeeverificationrequest_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/inviteusers/:
    post:
      operationId: auth_inviteusers_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteEmployees'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteEmployees'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteEmployees'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEmployees'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/password-reset-complete/:
    patch:
      operationId: auth_password_reset_complete_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/password-reset/{uidb64}/{token}/:
    get:
      operationId: auth_password_reset_retrieve
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: uidb64
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/requestlogintoken/:
    post:
      description: This endpoint is to allow to allow users to enter thei emails so
        that they can receive a login token which they will be able to login with
      operationId: auth_requestlogintoken_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/requestpasswordtoken/:
    post:
      description: "This endpoint is to allow to  a user request a one time token\
        \ so that they are able to reset their passwords, the token is sent to their\
        \ mails"
      operationId: auth_requestpasswordtoken_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/requestresetpassowrd/:
    post:
      description: "This endpoint is to allow to  a user request a one time token\
        \ so that they are able to reset their passwords, the token is sent to their\
        \ mails"
      operationId: auth_requestresetpassowrd_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/signin/:
    post:
      operationId: auth_signin_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokenlogin/:
    post:
      description: "This endpoint is to allow to allow a user to verify their tokens,\
        \ during login when sennt out to their mails"
      operationId: auth_tokenlogin_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLogin'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokenpasswordchange/:
    post:
      description: This endpoint is to allow to a user to verify the tokens that was
        sent out to their mails
      operationId: auth_tokenpasswordchange_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenSetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenSetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenSetNewPassword'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokensignin/:
    patch:
      operationId: auth_tokensignin_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokensigninconfirmation/{uidb64}/:
    post:
      operationId: auth_tokensigninconfirmation_create
      parameters:
      - explode: false
        in: path
        name: uidb64
        required: true
        schema:
          pattern: "^[-\\w]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordEmailRequest'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokensigninrequest/:
    get:
      operationId: auth_tokensigninrequest_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/tokenverification/:
    post:
      description: "This endpoint is to allow to allow a user to verify their tokens,\
        \ during registration when sennt out to their mails"
      operationId: auth_tokenverification_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/auth/unverifiedusers/:
    get:
      operationId: auth_unverifiedusers_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUnverifiedUsersList'
          description: ""
      tags:
      - auth
  /api/auth/verifyinvitedusers/:
    post:
      description: This endpoint is to allow an invited user to verify their token
        that was triggered when admin invited them to use the platform
      operationId: auth_verifyinvitedusers_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyUsersToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyUsersToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyUsersToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUsersToken'
          description: ""
      security:
      - {}
      tags:
      - auth
  /api/call/analytics/call-resolution-analytics/:
    get:
      description: |-
        GET
        Params:
        tenant_id
        start_date
        end_date
      operationId: call_analytics_call_resolution_analytics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/analytics/call-tag-analytics/:
    get:
      description: |-
        GET
        Params:
        tenant_id
        tag_id
        start_date
        end_date
      operationId: call_analytics_call_tag_analytics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/analytics/call-volume-analytics/:
    get:
      description: |-
        GET
        Params:
        tenant_id
      operationId: call_analytics_call_volume_analytics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/analytics/customer-satisfaction-analytics/:
    get:
      description: |-
        GET
        Params:
        tenant_id
        start_date
        end_date
      operationId: call_analytics_customer_satisfaction_analytics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/analytics/feedback-category-distribution/:
    get:
      description: |-
        GET
        Params:
        tenant_id
        start_date
        end_date
      operationId: call_analytics_feedback_category_distribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/analytics/interaction-type-analytics/:
    get:
      description: |-
        GET
        Params:
        tenant_id
        start_date
        end_date
      operationId: call_analytics_interaction_type_analytics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - call
  /api/call/call/agent-performance/:
    delete:
      description: |-
        DELETE
        Params (all required):
        agent_performance_id
      operationId: call_call_agent_performance_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve agent_performances matching query.

                Params:
                agent_performance_id
                tenant_id
        =
      operationId: call_call_agent_performance_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPerformance'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        agent_performance_id
      operationId: call_call_agent_performance_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgentPerformance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAgentPerformance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAgentPerformance'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPerformance'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST

        Params:
        agent_performance_id
      operationId: call_call_agent_performance_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPerformance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentPerformance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentPerformance'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPerformance'
          description: ""
      tags:
      - call
  /api/call/call/call-metrics/:
    delete:
      description: |-
        DELETE
        Params (all required):
        call_metrics_id
      operationId: call_call_call_metrics_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve CallMetricss matching query.

                Params:
                call_metrics_id
        =
      operationId: call_call_call_metrics_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallMetrics'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        call_metrics_id
      operationId: call_call_call_metrics_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCallMetrics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCallMetrics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCallMetrics'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallMetrics'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        call_metrics_id
      operationId: call_call_call_metrics_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallMetrics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallMetrics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallMetrics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallMetrics'
          description: ""
      tags:
      - call
  /api/call/call/call-resolution/:
    delete:
      description: |-
        DELETE
        Params (all required):
        call_resolution_id
      operationId: call_call_call_resolution_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve call_resolutions matching query.

                Params:
                call_resolution_id
        =
      operationId: call_call_call_resolution_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallResolution'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        call_resolution_id
      operationId: call_call_call_resolution_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCallResolution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCallResolution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCallResolution'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallResolution'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        call_resolution_id
      operationId: call_call_call_resolution_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallResolution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallResolution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallResolution'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallResolution'
          description: ""
      tags:
      - call
  /api/call/call/call-tag/:
    delete:
      description: |-
        DELETE
        Delete a CallTag.

        Params (all required):
        name
      operationId: call_call_call_tag_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |-
        GET
        Retrieve call tags matching query.
      operationId: call_call_call_tag_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTag'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Add a CallTag to the database.
      operationId: call_call_call_tag_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallTag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTag'
          description: ""
      tags:
      - call
  /api/call/call/call-tag-mapping/:
    delete:
      description: |-
        DELETE
        Delete a CallTagMapping.

        Params (all required):
        call_id, tag_id
      operationId: call_call_call_tag_mapping_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |-
        GET
        Retrieve call tag mappings matching query.

        Params:
        call_id, tag_id
      operationId: call_call_call_tag_mapping_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTagMapping'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Create a CallTagMapping.
      operationId: call_call_call_tag_mapping_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallTagMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallTagMapping'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallTagMapping'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTagMapping'
          description: ""
      tags:
      - call
  /api/call/call/calls/:
    delete:
      description: |-
        DELETE
        Params (all required):
        call_id
      operationId: call_call_calls_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve calls matching query.

                Params:
                call_id
        =
      operationId: call_call_calls_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        call_id
      operationId: call_call_calls_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCall'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCall'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCall'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Params:
        call_id
      operationId: call_call_calls_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Call'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Call'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Call'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: ""
      tags:
      - call
  /api/call/call/customer-feedback/:
    delete:
      description: |-
        DELETE
        Params (all required):
        customer_feedback_id
      operationId: call_call_customer_feedback_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve customer_feedbacks matching query.

                Params:
                customer_feedback_id
        =
      operationId: call_call_customer_feedback_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFeedback'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        customer_feedback_id
      operationId: call_call_customer_feedback_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerFeedback'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFeedback'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        customer_feedback_id
      operationId: call_call_customer_feedback_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerFeedback'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFeedback'
          description: ""
      tags:
      - call
  /api/call/call/interaction-history/:
    delete:
      description: |-
        DELETE
        Params (all required):
        interaction_history_id
      operationId: call_call_interaction_history_destroy
      responses:
        "204":
          description: No response body
      tags:
      - call
    get:
      description: |2-
                GET
                Retrieve interaction_historys matching query.

                Params:
                interaction_history_id
        =
      operationId: call_call_interaction_history_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionHistory'
          description: ""
      tags:
      - call
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        interaction_history_id
      operationId: call_call_interaction_history_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInteractionHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInteractionHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInteractionHistory'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionHistory'
          description: ""
      tags:
      - call
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        interaction_history_id
      operationId: call_call_interaction_history_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InteractionHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InteractionHistory'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionHistory'
          description: ""
      tags:
      - call
  /api/chat/category/:
    get:
      description: |-
        GET
        Retrieve Category matching query.

        Params:
        tenant_id
      operationId: chat_category_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ""
      tags:
      - chat
    post:
      description: POST
      operationId: chat_category_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ""
      tags:
      - chat
    put:
      description: |-
        PUT
        Update Category instance

        Params:
        category_id
      operationId: chat_category_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ""
      tags:
      - chat
  /api/chat/chat/:
    delete:
      description: |-
        DELETE
        Remove a chat from the database.

        Params (all required):
        chat_id
      operationId: chat_chat_destroy
      responses:
        "204":
          description: No response body
      tags:
      - chat
    get:
      description: |-
        GET
        Retrieve Chats matching query.
        Params:
        chat_id
        tenant
        chat_owner
        anonymous_user
      operationId: chat_chat_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ""
      tags:
      - chat
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        chat_id
      operationId: chat_chat_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChat'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ""
      tags:
      - chat
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        chat_id
        tenant_id
        tenant_name
      operationId: chat_chat_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ""
      tags:
      - chat
  /api/chat/escalated_chats/:
    get:
      description: |-
        GET
        Retrieve Tenants Escalated chats
        Params:
        tenant
      operationId: chat_escalated_chats_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ""
      security:
      - {}
      tags:
      - chat
  /api/chat/message/:
    delete:
      description: |-
        DELETE
        Remove a chat from the database.

        Params (all required):
        message_id
        chat_id
      operationId: chat_message_destroy
      responses:
        "204":
          description: No response body
      tags:
      - chat
    get:
      description: |-
        GET
        Retrieve Messages matching query.

        Params:
        message_id
        chat_id
      operationId: chat_message_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ""
      tags:
      - chat
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        message_id
      operationId: chat_message_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ""
      tags:
      - chat
    post:
      description: |-
        POST
        Add a Chat to the database.

        Params:
        message_id
        chat_id
      operationId: chat_message_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ""
      tags:
      - chat
  /api/chat/topics/:
    get:
      description: |-
        GET
        Retrieve InteractionTopics matching query.

        Params:
        tenant_id
      operationId: chat_topics_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionTopics'
          description: ""
      tags:
      - chat
    post:
      description: POST
      operationId: chat_topics_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionTopics'
          description: ""
      tags:
      - chat
    put:
      description: |-
        PUT
        Update InteractionTopics matching topic_id.

        Params:
        tenant_id
        guest_client
        description
        category
      operationId: chat_topics_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InteractionTopics'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionTopics'
          description: ""
      tags:
      - chat
  /api/community/clientleftcommunity/:
    get:
      operationId: community_clientleftcommunity_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
      tags:
      - community
  /api/community/comment/:
    delete:
      description: |-
        DELETE
        Remove a comment from the database.
        comment_id
        thread
      operationId: community_comment_destroy
      responses:
        "204":
          description: No response body
      tags:
      - community
    get:
      description: |-
        GET
        Retrieve Comments matching query.

        Params:
        comment_id
        thread
        client
      operationId: community_comment_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ""
      tags:
      - community
    post:
      description: |-
        POST
        Add client comment

        Params:
        comment_id
        thread
      operationId: community_comment_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ""
      tags:
      - community
  /api/community/community/:
    get:
      description: |-
        GET
        Retrieve community members matching query if parameters are passed.
        Return all community members if no parameters are passed.

        Params:
        community_id
        tenant_id
      operationId: community_community_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
          description: ""
      tags:
      - community
  /api/community/communityfeed/:
    get:
      description: Mixin for applying DRF's pagination.
      operationId: community_communityfeed_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityFeed'
          description: ""
      tags:
      - community
  /api/community/communitymembers/:
    get:
      operationId: community_communitymembers_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
          description: ""
      tags:
      - community
  /api/community/communitytags/:
    get:
      description: Communitys API View
      operationId: community_communitytags_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityTag'
          description: ""
      tags:
      - community
    post:
      description: |-
        POST
        Add a community_tag to the database.

        Params:
        community_tag_id
        community_id
      operationId: community_communitytags_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunityTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommunityTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommunityTag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityTag'
          description: ""
      tags:
      - community
  /api/community/favoritecommunities/:
    get:
      operationId: community_favoritecommunities_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteCommunitiesClient'
          description: ""
      tags:
      - community
    post:
      operationId: community_favoritecommunities_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteCommunitiesClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavoriteCommunitiesClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FavoriteCommunitiesClient'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteCommunitiesClient'
          description: ""
      tags:
      - community
  /api/community/issue/:
    get:
      description: |-
        GET
        Retrieve Communitys matching query.

        Params:
        issue_id
        community_id
        client_id
        unauthenticated_client
      operationId: community_issue_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: ""
      tags:
      - community
    patch:
      description: |-
        PATCH

        Params:
        issue_id
      operationId: community_issue_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIssue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIssue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIssue'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: ""
      tags:
      - community
    post:
      description: |-
        POST
        Add a issue to the database.

        Params:
        issue_id
        community_id
      operationId: community_issue_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Issue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Issue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: ""
      tags:
      - community
    put:
      description: |-
        PUT
        Update an existing issue.

        Params:
        issue_id: The ID of the issue to update.
      operationId: community_issue_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Issue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Issue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: ""
      tags:
      - community
  /api/community/joincommunity/:
    post:
      operationId: community_joincommunity_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinCommunity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JoinCommunity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JoinCommunity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinCommunity'
          description: ""
      tags:
      - community
  /api/community/joinedmembers/:
    get:
      operationId: community_joinedmembers_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ""
      security:
      - {}
      tags:
      - community
  /api/community/leavecommunity/:
    post:
      operationId: community_leavecommunity_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveCommunity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LeaveCommunity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LeaveCommunity'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveCommunity'
          description: ""
      tags:
      - community
  /api/community/likeordislikecomment/:
    post:
      operationId: community_likeordislikecomment_create
      responses:
        "200":
          description: No response body
      tags:
      - community
  /api/community/thread/:
    get:
      description: |-
        GET
        Retrieve Threads matching query.

        Params:
        thread_id
        issue
      operationId: community_thread_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
          description: ""
      tags:
      - community
    post:
      description: |-
        POST
        Add a thread to the database.

        Params:
        thread_id
        issue
      operationId: community_thread_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thread'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thread'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Thread'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
          description: ""
      tags:
      - community
  /api/monitoring/connectors/:
    get:
      operationId: monitoring_connectors_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - monitoring
  /api/notifications/delegation/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: notifications_delegation_destroy
      responses:
        "204":
          description: No response body
      tags:
      - notifications
    get:
      description: |-
        GET
        Retrieve Delegations matching query.
        Params:
        delegation_id
        tenant_id
        employee
        admin_id
      operationId: notifications_delegation_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
          description: ""
      tags:
      - notifications
    patch:
      description: |-
        PATCH
        Update a delegation instance.

        Params:
        delegation_id
      operationId: notifications_delegation_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDelegation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDelegation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDelegation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
          description: ""
      tags:
      - notifications
    post:
      description: |-
        POST
        Add a Delegation to the database.

        Params:
        delegation_id
        tenant_id
        employee_id
        admin_id
        assigned_issue
        assigned_chat
        assigned_service
      operationId: notifications_delegation_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delegation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Delegation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Delegation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
          description: ""
      tags:
      - notifications
  /api/notifications/notifications/:
    delete:
      description: notifications_id
      operationId: notifications_notifications_destroy
      responses:
        "204":
          description: No response body
      tags:
      - notifications
    get:
      description: |-
        GET
        Params:
        employee
        admin
        read
        notifications_id
      operationId: notifications_notifications_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ""
      tags:
      - notifications
    patch:
      description: |-
        PATCH
        Update a chat instance.

        Params:
        notifications_id
      operationId: notifications_notifications_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotifications'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
          description: ""
      tags:
      - notifications
  /api/payments/freetrial/:
    post:
      operationId: payments_freetrial_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeTrialEnroll'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreeTrialEnroll'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreeTrialEnroll'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrialEnroll'
          description: ""
      security:
      - {}
      tags:
      - payments
  /api/payments/getpayments/:
    get:
      description: |-
        GET
        Retrieve Tenants Subscription paymets history

        Params:
        id
      operationId: payments_getpayments_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ""
      tags:
      - payments
  /api/payments/subscription/:
    get:
      description: |-
        GET
        Retrieve Tenant matching query.

        Params:
        tenant
      operationId: payments_subscription_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - payments
  /api/payments/tabularpayments/:
    get:
      operationId: payments_tabularpayments_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - payments
  /api/payments/tiers/:
    get:
      operationId: payments_tiers_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTierList'
          description: ""
      security:
      - {}
      tags:
      - payments
  /api/payments/update_subscription/{id}/:
    post:
      operationId: payments_update_subscription_create
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - payments
  /api/predictive/escalatedchats/:
    get:
      description: |-
        GET
        Retrieve EscalatedChatsss matching query.

        Params:
        escalated_chats_id
        tenant
        date
      operationId: predictive_escalatedchats_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/genderdistribution/:
    get:
      description: |-
        GET
        Retrieve GenderDistributionss matching query.

        Params:
        gender_distribution_id
        tenant
        date
      operationId: predictive_genderdistribution_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/growthrate/:
    get:
      description: |-
        GET
        Retrieve GrowthRatess matching query.

        Params:
        growth_rate_id
        tenant
        date
      operationId: predictive_growthrate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/interactions/:
    get:
      description: |-
        GET
        Retrieve interactionss matching query.

        Params:
        interactions_id
        tenant
        date
      operationId: predictive_interactions_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/involvements/:
    get:
      description: |-
        GET
        Retrieve Involvementss matching query.

        Params:
        involvements_id
        tenant
        date
      operationId: predictive_involvements_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/topics/:
    get:
      description: |-
        GET
        Retrieve topics matching query.

        Params:
        topics_id
        tenant
        date
      operationId: predictive_topics_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/predictive/uniqueclients/:
    get:
      description: |-
        GET
        Retrieve UniqueClientsss matching query.

        Params:
        unique_clients_id
        tenant
        date
      operationId: predictive_uniqueclients_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - predictive
  /api/reports/chatresports/:
    get:
      description: |-
        GET
        Retrieve Tenant Chat reports

        Params:
        tenant_id
      operationId: reports_chatresports_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/reports/issuesreports/:
    get:
      description: |-
        GET
        Retrieve Issues Reports

        Params:
        community_id
      operationId: reports_issuesreports_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/reports/messagereports/:
    get:
      operationId: reports_messagereports_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/reports/surverreports/:
    get:
      description: |-
        GET
        Retrieve survey reports

        Params:
        tenant_id
      operationId: reports_surverreports_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/reports/surverresponserate/:
    get:
      description: |-
        GET
        Retrieve Survey Response id

        Params:
        survey_id
      operationId: reports_surverresponserate_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/reports/threadreports/:
    get:
      description: |-
        GET
        Retrieve Threads reports

        Params:
        thread_id
      operationId: reports_threadreports_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - reports
  /api/schema/:
    get:
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      operationId: schema_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - yaml
          type: string
        style: form
      - explode: true
        in: query
        name: lang
        required: false
        schema:
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                additionalProperties: {}
                type: object
            application/yaml:
              schema:
                additionalProperties: {}
                type: object
            application/vnd.oai.openapi+json:
              schema:
                additionalProperties: {}
                type: object
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: ""
      security:
      - {}
      tags:
      - schema
  /api/search/search/:
    get:
      operationId: search_search_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - search
  /api/services/serviceforms/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceforms_destroy
      responses:
        "204":
          description: No response body
      tags:
      - services
    get:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceforms_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceForms'
          description: ""
      tags:
      - services
    patch:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceforms_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceForms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceForms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceForms'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceForms'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceforms_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceForms'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceForms'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceForms'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceForms'
          description: ""
      tags:
      - services
  /api/services/serviceformsresponse/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceformsresponse_destroy
      responses:
        "204":
          description: No response body
      tags:
      - services
    get:
      description: |-
        GET
        Retrieve Service Form Responses

        Params:
        service_form_response_id
        service_form
        client
        unauthenticated_user
      operationId: services_serviceformsresponse_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFormsResponse'
          description: ""
      tags:
      - services
    patch:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceformsresponse_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceFormsResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceFormsResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceFormsResponse'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFormsResponse'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceformsresponse_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFormsResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceFormsResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceFormsResponse'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFormsResponse'
          description: ""
      tags:
      - services
  /api/services/servicerequestchat/:
    get:
      description: |-
        GET
        Params:
        service_request_message_id
      operationId: services_servicerequestchat_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMessageChat'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_servicerequestchat_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceMessageChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceMessageChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceMessageChat'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMessageChat'
          description: ""
      tags:
      - services
  /api/services/servicerequestchatmessage/:
    get:
      description: |-
        GET
        Params:
        service_request_chat_id
      operationId: services_servicerequestchatmessage_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestChat'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_servicerequestchatmessage_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequestChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequestChat'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestChat'
          description: ""
      tags:
      - services
  /api/services/serviceresquest/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceresquest_destroy
      responses:
        "204":
          description: No response body
      tags:
      - services
    get:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceresquest_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequest'
          description: ""
      tags:
      - services
    patch:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceresquest_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequest'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_serviceresquest_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequest'
          description: ""
      tags:
      - services
  /api/services/services/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: services_services_destroy
      responses:
        "204":
          description: No response body
      tags:
      - services
    get:
      description: |-
        GET
        Retrieve Services

        Params:
        tenant_id
      operationId: services_services_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ""
      tags:
      - services
    patch:
      description: |-
        PATCH
        Update a service instance.

        Params:
        service_id
      operationId: services_services_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedService'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_services_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ""
      tags:
      - services
  /api/services/servicetype/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: services_servicetype_destroy
      responses:
        "204":
          description: No response body
      tags:
      - services
    get:
      description: Mixin for applying DRF's pagination.
      operationId: services_servicetype_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ""
      tags:
      - services
    post:
      description: Mixin for applying DRF's pagination.
      operationId: services_servicetype_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceType'
          description: ""
      tags:
      - services
  /api/socialintergrations/facebookintergration/:
    get:
      operationId: socialintergrations_facebookintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      operationId: socialintergrations_facebookintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/instagramintergration/:
    get:
      operationId: socialintergrations_instagramintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      operationId: socialintergrations_instagramintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/proximawhatsappintergration/:
    get:
      operationId: socialintergrations_proximawhatsappintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      operationId: socialintergrations_proximawhatsappintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/savefacebookintergration/:
    get:
      description: |-
        GET
        Retrieve Chats matching query.

        Params:
        facebook_intergration_id
        tenant_id
        api_token
      operationId: socialintergrations_savefacebookintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      description: |-
        POST
        facebook_intergration_id
        tenant_id
        api_token
      operationId: socialintergrations_savefacebookintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    put:
      description: |-
        PUT
        Update facebook Integration

        Params:
        tenant_id
        ... (other update parameters)
      operationId: socialintergrations_savefacebookintergration_update
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/saveinstagramintergration/:
    get:
      description: |-
        GET
        Retrieve Chats matching query.

        Params:
        instagram_intergration_id
        tenant_id
        api_token
      operationId: socialintergrations_saveinstagramintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      description: |-
        POST
        instagram_intergration_id
        tenant_id
        api_token
      operationId: socialintergrations_saveinstagramintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    put:
      description: |-
        PUT
        Update Instagram Integration

        Params:
        tenant_id
        ... (other update parameters)
      operationId: socialintergrations_saveinstagramintergration_update
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/savewhatsappintergration/:
    get:
      description: |-
        GET
        Retrieve Chats matching query.

        Params:
        whatsapp_intergration_id
        tenant_id
        api_token
        bsn_number
      operationId: socialintergrations_savewhatsappintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      description: |-
        POST
        whatsapp_intergration_id
        tenant_id
        api_token
      operationId: socialintergrations_savewhatsappintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    put:
      description: |-
        PUT
        Update WhatsApp Integration

        Params:
        tenant_id
        ... (other update parameters)
      operationId: socialintergrations_savewhatsappintergration_update
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/socialintergrations/whatsappintergration/:
    get:
      operationId: socialintergrations_whatsappintergration_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
    post:
      operationId: socialintergrations_whatsappintergration_create
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - socialintergrations
  /api/survey/endsurvey/:
    post:
      description: |-
        POST
        End a Survey.

        Params:
        survey_id (received from request body)
      operationId: survey_endsurvey_create
      responses:
        "200":
          description: No response body
      tags:
      - survey
  /api/survey/promptsurvey/:
    get:
      description: |-
        GET
        Retrieve Prompt Surveys

        Params:
        prompt_survey_id
        tenant_id
        client
        unauthenticated_client
      operationId: survey_promptsurvey_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptSurvey'
          description: ""
      tags:
      - survey
    post:
      operationId: survey_promptsurvey_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PromptSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PromptSurvey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptSurvey'
          description: ""
      tags:
      - survey
  /api/survey/questioninduced/:
    get:
      description: |-
        GET
        Retrieve Question Induced Surveys

        Params:
        question_induced_survey_id
        tenant_id
        client
        unauthenticated_client
      operationId: survey_questioninduced_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionInducedSurvey'
          description: ""
      tags:
      - survey
    post:
      operationId: survey_questioninduced_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionInducedSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionInducedSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionInducedSurvey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionInducedSurvey'
          description: ""
      tags:
      - survey
  /api/survey/response/:
    get:
      description: |-
        GET
        Retrieve response matching query.

        Params:
        response_id
        survey_id
        client
        tenant_id
      operationId: survey_response_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ""
      tags:
      - survey
    post:
      description: |-
        POST
        Add a survey to the database.

        Params:
        response_id
        survey_id
        client
        survey_response
      operationId: survey_response_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ""
      tags:
      - survey
  /api/survey/survey/:
    get:
      description: |-
        GET
        Retrieve Surveys

        Params:
        survey_id
        tenant_id
        client
        unauthenticated_client
      operationId: survey_survey_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ""
      tags:
      - survey
    post:
      description: |-
        POST
        Add a Survey to the database.

        Params:
        survey_id
        tenant_id
        survey_topic
        survey_description
        survey_context
        survey_questions
        target_audience
      operationId: survey_survey_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ""
      tags:
      - survey
  /api/survey/surveyreportview/:
    get:
      description: |-
        GET
        Retrieve Chats matching query.

        Params:
        survey_id
      operationId: survey_surveyreportview_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyReport'
          description: ""
      tags:
      - survey
    post:
      description: |-
        POST
        Add a Survey to the database.

        Params:
        survey_report_id
        survey_id
        conclusion
        survey_success
        survey_reporter
      operationId: survey_surveyreportview_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyReport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveyReport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveyReport'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyReport'
          description: ""
      tags:
      - survey
  /api/survey/surveysubgroup/:
    get:
      description: |-
        GET
        Retrieve Chats matching query.

        Params:
        survey_id
      operationId: survey_surveysubgroup_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySubGroups'
          description: ""
      tags:
      - survey
    post:
      description: |-
        POST
        Add a Survey Subgroup to the database.

        Params:
        survey_subgroups_id
        survey_id
        subgroup_name
        subgroup_description
        subgroup_clients
      operationId: survey_surveysubgroup_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveySubGroups'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveySubGroups'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveySubGroups'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySubGroups'
          description: ""
      tags:
      - survey
  /api/tenantiva/createagent/:
    post:
      operationId: tenantiva_createagent_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAgent'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAgent'
          description: ""
      security:
      - {}
      tags:
      - tenantiva
  /api/tenantiva/sampletools/:
    get:
      operationId: tenantiva_sampletools_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - tenantiva
  /api/tenantiva/tenantknowlegebase/:
    delete:
      description: Mixin for applying DRF's pagination.
      operationId: tenantiva_tenantknowlegebase_destroy
      responses:
        "204":
          description: No response body
      tags:
      - tenantiva
    get:
      description: Mixin for applying DRF's pagination.
      operationId: tenantiva_tenantknowlegebase_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledgebase'
          description: ""
      tags:
      - tenantiva
    patch:
      description: Mixin for applying DRF's pagination.
      operationId: tenantiva_tenantknowlegebase_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgebase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgebase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgebase'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledgebase'
          description: ""
      tags:
      - tenantiva
  /api/tenantiva/trainingprogress/:
    get:
      description: |-
        GET
        Params:
        assistant_training_id
        tenant_id
      operationId: tenantiva_trainingprogress_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantTrainingProgressase'
          description: ""
      tags:
      - tenantiva
  /api/tenantmanagement/address/:
    get:
      description: |-
        GET
        Retrieve Addresss matching query.

        Params:
        address_id
        tenant_id
      operationId: tenantmanagement_address_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
    post:
      description: |-
        POST
        Add a tenant address to the database.

        Params:
        address_id
        tenant_id
      operationId: tenantmanagement_address_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
  /api/tenantmanagement/department:
    delete:
      description: |-
        DELETE
        Remove a Department from the database.
        Params:
        department_id
      operationId: tenantmanagement_department_destroy
      responses:
        "204":
          description: No response body
      tags:
      - tenantmanagement
    get:
      description: |-
        GET
        Retrieve departments matching query.
        Params:
        department_id
        tenant_id
      operationId: tenantmanagement_department_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ""
      tags:
      - tenantmanagement
    patch:
      description: |-
        PATCH
        Update a department instance.
      operationId: tenantmanagement_department_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ""
      tags:
      - tenantmanagement
    post:
      description: |-
        POST
        Add a Department to the database.
      operationId: tenantmanagement_department_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ""
      tags:
      - tenantmanagement
  /api/tenantmanagement/metadata/:
    delete:
      description: |-
        DELETE
        Remove a metadata of a tenant from the database.

        Params (all required):
         metadata_id
        tenant_id
      operationId: tenantmanagement_metadata_destroy
      responses:
        "204":
          description: No response body
      security:
      - {}
      tags:
      - tenantmanagement
    get:
      description: |-
        GET
        Retrieve Metadata matching query.

        Params:
        metadata_id
        tenant_id
      operationId: tenantmanagement_metadata_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
    post:
      description: |-
        POST
        Add a metadata to the database.

        Params:
        metadata_id
        tenant_id
      operationId: tenantmanagement_metadata_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metadata'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Metadata'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Metadata'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
  /api/tenantmanagement/product/:
    delete:
      description: |-
        DELETE
        Remove a Product from the database.

        Params (all required):
        product_id
      operationId: tenantmanagement_product_destroy
      responses:
        "204":
          description: No response body
      security:
      - {}
      tags:
      - tenantmanagement
    get:
      description: |-
        GET
        Retrieve products matching query.

        Params:
        product_id
        tenant_id
      operationId: tenantmanagement_product_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
    post:
      description: |-
        POST
        Add a Product to the database.

        Params:
        product_id
        tenant_id
        name (optional)
        description
        price
      operationId: tenantmanagement_product_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
  /api/tenantmanagement/tenant/:
    delete:
      description: |-
        DELETE
        Remove a tenant from the database.

        Params (all required):
        tenant_id
        tenant_name (optional)
      operationId: tenantmanagement_tenant_destroy
      responses:
        "204":
          description: No response body
      security:
      - {}
      tags:
      - tenantmanagement
    get:
      description: |-
        GET
        Retrieve Tenant matching query.

        Params:
        tenant_id
        tenant_name
      operationId: tenantmanagement_tenant_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
    post:
      description: |-
        POST
        Add a Tenant to the database.

        Params:
        tenant_id
        tenant_name (optional)
      operationId: tenantmanagement_tenant_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tenant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
          description: ""
      security:
      - {}
      tags:
      - tenantmanagement
  /api/tenantmanagement/tenantdetails/:
    get:
      operationId: tenantmanagement_tenantdetails_retrieve
      responses:
        "200":
          description: No response body
      security:
      - {}
      tags:
      - tenantmanagement
  /api/tenantmanagement/virtual-assistants/{id}/:
    get:
      operationId: tenantmanagement_virtual_assistants_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
    post:
      operationId: tenantmanagement_virtual_assistants_create
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
    put:
      operationId: tenantmanagement_virtual_assistants_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
  /api/tenantmanagement/virtualassistant/:
    get:
      operationId: tenantmanagement_virtualassistant_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
    post:
      operationId: tenantmanagement_virtualassistant_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
    put:
      operationId: tenantmanagement_virtualassistant_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualAssistant'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistant'
          description: ""
      tags:
      - tenantmanagement
  /api/tenantmanagement/virtualassitantdocs/:
    get:
      operationId: tenantmanagement_virtualassitantdocs_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistantDocuments'
          description: ""
      tags:
      - tenantmanagement
    post:
      operationId: tenantmanagement_virtualassitantdocs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualAssistantDocuments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VirtualAssistantDocuments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VirtualAssistantDocuments'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualAssistantDocuments'
          description: ""
      tags:
      - tenantmanagement
  /api/userprofiles/admin/:
    get:
      operationId: userprofiles_admin_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ""
      tags:
      - userprofiles
    patch:
      operationId: userprofiles_admin_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ""
      tags:
      - userprofiles
    put:
      operationId: userprofiles_admin_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ""
      tags:
      - userprofiles
  /api/userprofiles/adminprofiles/{admin_id}/:
    get:
      operationId: userprofiles_adminprofiles_retrieve
      parameters:
      - explode: false
        in: path
        name: admin_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProfile'
          description: ""
      tags:
      - userprofiles
  /api/userprofiles/client/:
    get:
      operationId: userprofiles_client_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ""
      tags:
      - userprofiles
    patch:
      operationId: userprofiles_client_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ""
      tags:
      - userprofiles
    put:
      operationId: userprofiles_client_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
          description: ""
      tags:
      - userprofiles
  /api/userprofiles/clientprofiles/{client_id}/:
    get:
      operationId: userprofiles_clientprofiles_retrieve
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ""
      tags:
      - userprofiles
  /api/userprofiles/employee/:
    get:
      operationId: userprofiles_employee_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUser'
          description: ""
      tags:
      - userprofiles
    patch:
      operationId: userprofiles_employee_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUser'
          description: ""
      tags:
      - userprofiles
    put:
      operationId: userprofiles_employee_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUser'
          description: ""
      tags:
      - userprofiles
  /api/userprofiles/employeeprofiles/{employee_id}/:
    get:
      operationId: userprofiles_employeeprofiles_retrieve
      parameters:
      - explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfile'
          description: ""
      tags:
      - userprofiles
  /api/users/admin/:
    get:
      description: |-
        GET
        Retrieve Admins

        Params:
        tenant_id
      operationId: users_admin_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - users
  /api/users/employees/:
    get:
      description: |-
        GET
        Retrieve Employees

        Params:
        tenant_id
      operationId: users_employees_retrieve
      responses:
        "200":
          description: No response body
      tags:
      - users
components:
  schemas:
    Address:
      example:
        tenant_id: 0
        country: country
        city: city
        payment_number: payment_number
        address_id: 6
        state: state
        postal_code: postal_code
      properties:
        tenant_id:
          description: Display name of the tenant
          type: integer
        address_id:
          description: Address id of the tenant
          readOnly: true
          type: integer
        city:
          description: City which the tenant comes from
          maxLength: 30
          type: string
        country:
          description: Country of yhe tenant
          maxLength: 30
          type: string
        postal_code:
          description: Postal code of the tenant
          maxLength: 30
          type: string
        state:
          description: Statement which the tenant comes from
          maxLength: 30
          type: string
        payment_number:
          description: If for mobile transaction - the phone number to use
          maxLength: 30
          type: string
      required:
      - address_id
      - city
      - country
      - payment_number
      - postal_code
      - state
      - tenant_id
      type: object
    Admin:
      description: Serializers registration requests and creates a new user.
      example:
        tenant_id: 0
        password: password
        user_type: null
        gender: null
        DOB: 2000-01-23
        phonenumber: phonenumber
        last_name: last_name
        first_name: first_name
        email: email
        username: username
        confirm_password: confirm_password
        token: token
      properties:
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserType8ceEnum'
        tenant_id:
          description: Display id of the tenant
          type: integer
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        confirm_password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          maxLength: 255
          readOnly: true
          type: string
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
      - tenant_id
      - token
      - username
      type: object
    AdminProfile:
      example:
        country: country
        profile_photo: profile_photo
        city: city
        county: county
        location: location
        postal_code: postal_code
        username: username
      properties:
        username:
          type: string
        profile_photo:
          readOnly: true
          type: string
        country:
          type: string
        county:
          type: string
        city:
          type: string
        postal_code:
          type: string
        location:
          type: string
      required:
      - profile_photo
      - username
      type: object
    AdminUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/AdminProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      required:
      - city
      - country
      - county
      - email
      - first_name
      - id
      - last_name
      - location
      - password
      - postal_code
      - profile
      - profile_photo
      - token
      - username
      type: object
    AgentPerformance:
      example:
        tenant_id: ""
        average_call_duration: average_call_duration
        average_satisfaction_score: average_satisfaction_score
        resolution_rate: resolution_rate
        total_calls_handled: 441289069
        agent_performance_id: 0
      properties:
        agent_performance_id:
          readOnly: true
          type: integer
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/TenantInfo'
          readOnly: true
        average_call_duration:
          description: Average duration of calls handled by the agent.
          type: string
        average_satisfaction_score:
          description: Average satisfaction score from customer feedback.
          format: decimal
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        resolution_rate:
          description: Percentage of calls resolved by the agent.
          format: decimal
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        total_calls_handled:
          description: Total number of calls handled by the agent.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      required:
      - agent_performance_id
      - average_call_duration
      - average_satisfaction_score
      - resolution_rate
      - tenant_id
      - total_calls_handled
      type: object
    AnonymousUser:
      example:
        anonymous_user_id: 0
        contact: contact
        full_names: full_names
        email: email
        token: token
      properties:
        anonymous_user_id:
          description: The webhookevent chats ID UUID.
          readOnly: true
          type: integer
        token:
          readOnly: true
          type: string
        email:
          description: Email for anonymous users
          format: email
          maxLength: 254
          nullable: true
          type: string
        full_names:
          maxLength: 255
          nullable: true
          type: string
        contact:
          description: Contact related to an anonymous user
          maxLength: 255
          nullable: true
          type: string
      required:
      - anonymous_user_id
      - token
      type: object
    AssistantTrainingProgressase:
      example:
        tenant_id: 6
        succesful: true
        message: message
        assistant_training_id: 0
        status: null
      properties:
        assistant_training_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        status:
          $ref: '#/components/schemas/AssistantTrainingProgressase_status'
        tenant_id:
          description: Display name of the tenant
          type: integer
        succesful:
          description: Know the progress of updating an assistant
          type: boolean
        message:
          description: Updating
          maxLength: 300
          nullable: true
          type: string
      required:
      - assistant_training_id
      - tenant_id
      type: object
    AssistantTrainingProgressaseStatusEnum:
      description: |-
        * `In Progress` - In Progress
        * `Paused` - Paused
        * `Completed` - Completed
      enum:
      - In Progress
      - Paused
      - Completed
      type: string
    BlankEnum:
      enum:
      - ""
      type: string
    Call:
      example:
        tenant_id: ""
        duration: duration
        client_caller:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        success: true
        guest_called: 1
        call_id: 0
      properties:
        call_id:
          description: The call id.
          readOnly: true
          type: integer
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/TenantInfo'
          readOnly: true
        duration:
          type: string
        success:
          type: boolean
        client_caller:
          $ref: '#/components/schemas/ClientInfo'
        guest_called:
          description: Display name of the client
          nullable: true
          type: integer
      required:
      - call_id
      - client_caller
      - duration
      - success
      - tenant_id
      type: object
    CallMetrics:
      example:
        call: ""
        transcripts: ""
        call_satisfaction: true
        call_metrics_id: 0
        issue_resolution: true
      properties:
        call_metrics_id:
          description: The call metrics id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        transcripts: {}
        call_satisfaction:
          type: boolean
        issue_resolution:
          type: boolean
      required:
      - call
      - call_metrics_id
      - transcripts
      type: object
    CallResolution:
      example:
        call: ""
        follow_up_date: 2000-01-23T04:56:07.000+00:00
        pending_actions: ""
        call_resolution_id: 0
        follow_up_required: true
        status: null
      properties:
        call_resolution_id:
          description: The call resolution id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        status:
          $ref: '#/components/schemas/CallResolutionStatusEnum'
        pending_actions:
          nullable: true
        follow_up_required:
          type: boolean
        follow_up_date:
          format: date-time
          nullable: true
          type: string
      required:
      - call
      - call_resolution_id
      type: object
    CallResolutionStatusEnum:
      description: |-
        * `RESOLVED` - Resolved
        * `PENDING` - Pending
        * `FOLLOW_UP` - Follow Up Required
      enum:
      - RESOLVED
      - PENDING
      - FOLLOW_UP
      type: string
    CallTag:
      example:
        name: name
        description: description
        call_tag_id: 0
      properties:
        call_tag_id:
          description: The call tag id.
          readOnly: true
          type: integer
        name:
          maxLength: 50
          type: string
        description:
          nullable: true
          type: string
      required:
      - call_tag_id
      - name
      type: object
    CallTagMapping:
      example:
        call_tag_mapping_id: 0
        call: ""
        tag: ""
      properties:
        call_tag_mapping_id:
          description: The call tag mapping id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        tag:
          allOf:
          - $ref: '#/components/schemas/CallTag'
          readOnly: true
      required:
      - call
      - call_tag_mapping_id
      - tag
      type: object
    Category:
      example:
        tenant_id: 6
        category_id: 0
        name: name
        description: description
      properties:
        category_id:
          description: The chat ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
          type: integer
        name:
          description: Name of the category
          maxLength: 50
          type: string
        description:
          description: Description of the category
          maxLength: 50
          type: string
      required:
      - category_id
      - description
      - name
      - tenant_id
      type: object
    ChannelEnum:
      description: |-
        * `Mobile` - Mobile
        * `Website` - Website
      enum:
      - Mobile
      - Website
      type: string
    Chat:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
        guest_client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        iva_enabled: true
        chat_owner:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        anonymous_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        created_at: created_at
        client_satisfaction: true
        chat_id: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        chat_id:
          description: The chat ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/TenantInfo'
        guest_client:
          $ref: '#/components/schemas/ClientInfo'
        chat_owner:
          $ref: '#/components/schemas/ClientInfo'
        anonymous_user:
          $ref: '#/components/schemas/AnonymousUser'
        client_satisfaction:
          description: Whether client is satisfied or not
          nullable: true
          type: boolean
        iva_enabled:
          description: Enable or disable whether the virtual assistant should talk
            to a client
          type: boolean
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
      required:
      - anonymous_user
      - chat_id
      - chat_owner
      - created_at
      - guest_client
      - tenant_id
      - timestamp
      type: object
    ChatPrompts:
      example:
        metadata: ""
        chat_description: chat_description
        updated_at: 2000-01-23T04:56:07.000+00:00
        knowledgebase: 5
        date_time_created_at: 2000-01-23
        created_at: created_at
        id: 1
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        chat_description:
          maxLength: 1000
          type: string
        knowledgebase:
          description: Linking it to the knowledgebase
          type: integer
      required:
      - chat_description
      - created_at
      - date_time_created_at
      - id
      - knowledgebase
      - timestamp
      - updated_at
      type: object
    Client:
      description: Serializers registration requests and creates a new user.
      example:
        password: password
        user_type: null
        gender: null
        DOB: 2000-01-23
        phonenumber: phonenumber
        last_name: last_name
        id: 0
        first_name: first_name
        email: email
        username: username
        confirm_password: confirm_password
        token: token
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserType8ceEnum'
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        confirm_password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          maxLength: 255
          readOnly: true
          type: string
      required:
      - confirm_password
      - email
      - first_name
      - id
      - last_name
      - password
      - token
      - username
      type: object
    ClientCommunity:
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - username
      type: object
    ClientInfo:
      example:
        last_name: last_name
        id: 6
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - username
      type: object
    ClientLikes:
      example:
        last_name: last_name
        id: 1
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - username
      type: object
    ClientProfile:
      example:
        country: country
        profile_photo: profile_photo
        city: city
        county: county
        location: location
        postal_code: postal_code
        username: username
      properties:
        username:
          type: string
        profile_photo:
          readOnly: true
          type: string
        country:
          type: string
        county:
          type: string
        city:
          type: string
        postal_code:
          type: string
        location:
          type: string
      required:
      - profile_photo
      - username
      type: object
    ClientServicesInfo:
      example:
        last_name: last_name
        id: 6
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - username
      type: object
    ClientUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/ClientProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      required:
      - city
      - country
      - county
      - email
      - first_name
      - id
      - last_name
      - location
      - password
      - postal_code
      - profile
      - profile_photo
      - token
      - username
      type: object
    Comment:
      example:
        client:
          last_name: last_name
          id: 1
          first_name: first_name
          email: email
          username: username
        dislikes:
        - 5
        - 5
        thread: 6
        comment_id: 0
        comment_description: comment_description
        likes:
        - last_name: last_name
          id: 1
          first_name: first_name
          email: email
          username: username
        - last_name: last_name
          id: 1
          first_name: first_name
          email: email
          username: username
      properties:
        comment_id:
          description: The chat ID UUID for an instance of a issue.
          readOnly: true
          type: integer
        thread:
          description: Display name of the Thread
          type: integer
        client:
          $ref: '#/components/schemas/ClientLikes'
        comment_description:
          description: Description of the comment
          nullable: true
          type: string
        likes:
          items:
            $ref: '#/components/schemas/ClientLikes'
          type: array
        dislikes:
          description: Users who liked the comment
          items:
            type: integer
          type: array
      required:
      - client
      - comment_id
      - likes
      - thread
      type: object
    Community:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
          sub_category: sub_category
          registration_number: registration_number
          industry: ""
          token: token
        community_id: 0
        members:
        - join_timestamp: 2000-01-23T04:56:07.000+00:00
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          rating: 5.637376656633329
          last_name: last_name
          id: 1
          first_name: first_name
          email: email
          issues_count: 5
          username: username
        - join_timestamp: 2000-01-23T04:56:07.000+00:00
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          rating: 5.637376656633329
          last_name: last_name
          id: 1
          first_name: first_name
          email: email
          issues_count: 5
          username: username
        description: description
      properties:
        community_id:
          description: The tenant community ID UUID.
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/CommunityTenant'
        description:
          description: Description of the community.
          maxLength: 255
          nullable: true
          type: string
        members:
          items:
            $ref: '#/components/schemas/Member'
          type: array
      required:
      - community_id
      - members
      - tenant_id
      type: object
    CommunityFeed:
      example:
        num_comments: 1
        community_id:
          key: ""
        issue_id: 0
        issue: issue
        description: description
        solved: true
        created_at: created_at
        num_likes: num_likes
        num_unique_users: 5
        client_id:
          key: ""
        timestamp: 2000-01-23T04:56:07.000+00:00
        tags:
        - community_id: 6
          name: name
        - community_id: 6
          name: name
      properties:
        issue_id:
          description: The issue ID UUID .
          readOnly: true
          type: integer
        issue:
          description: Display name of the issue that's created
          maxLength: 100
          type: string
        description:
          description: Description of the issue
          maxLength: 255
          type: string
        solved:
          description: Was the issue solved or not
          type: boolean
        client_id:
          additionalProperties: {}
          readOnly: true
          type: object
        community_id:
          additionalProperties: {}
          readOnly: true
          type: object
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/CommunityTag'
          type: array
        num_comments:
          readOnly: true
          type: integer
        num_unique_users:
          readOnly: true
          type: integer
        num_likes:
          readOnly: true
          type: string
      required:
      - client_id
      - community_id
      - created_at
      - description
      - issue
      - issue_id
      - num_comments
      - num_likes
      - num_unique_users
      - tags
      - timestamp
      type: object
    CommunityPrompts:
      example:
        metadata: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        knowledgebase: 2
        date_time_created_at: 2000-01-23
        created_at: created_at
        id: 5
        timestamp: 2000-01-23T04:56:07.000+00:00
        community_description: community_description
      properties:
        id:
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        community_description:
          maxLength: 1000
          type: string
        knowledgebase:
          description: Linking it to the knowledgebase
          type: integer
      required:
      - community_description
      - created_at
      - date_time_created_at
      - id
      - knowledgebase
      - timestamp
      - updated_at
      type: object
    CommunityTag:
      example:
        community_id: 6
        name: name
      properties:
        name:
          maxLength: 200
          type: string
        community_id:
          description: Display name of the community
          type: integer
      required:
      - community_id
      - name
      type: object
    CommunityTenant:
      example:
        tenant_id: 6
        tenant_name: tenant_name
        sub_category: sub_category
        registration_number: registration_number
        industry: ""
        token: token
      properties:
        tenant_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_name:
          description: name of the company
          maxLength: 30
          type: string
        industry:
          allOf:
          - $ref: '#/components/schemas/IndustryEnum'
          description: |-
            Industry of the company

            * `IT` - Information Technology
            * `Finance` - Finance
            * `Healthcare` - Healthcare
            * `Education` - Education
            * `Retail` - Retail
            * `Manufacturing` - Manufacturing
            * `Automotive` - Automotive
            * `Hospitality` - Hospitality
            * `RealEstate` - Real Estate
            * `Media` - Media
            * `Telecommunications` - Telecommunications
            * `Energy` - Energy
            * `Transportation` - Transportation
            * `Agriculture` - Agriculture
        token:
          description: Token for the tenant
          maxLength: 500
          nullable: true
          type: string
        sub_category:
          maxLength: 30
          nullable: true
          type: string
        registration_number:
          description: The business registration number
          maxLength: 500
          nullable: true
          type: string
      required:
      - industry
      - tenant_id
      - tenant_name
      type: object
    CompanyType:
      properties:
        type:
          $ref: '#/components/schemas/CompanyTypeTypeEnum'
      required:
      - type
      type: object
    CompanyTypeTypeEnum:
      description: |-
        * `small` - Small Company
        * `large` - Large Company
        * `enterprise` - Enterprise
      enum:
      - small
      - large
      - enterprise
      type: string
    CreateAgent:
      example:
        tool_name: tool_name
        tenant_name: tenant_name
        service_description: ""
        chat_description: ""
        survey_description: ""
        csv: csv
        word_document: word_document
        google_drive_link: https://openapi-generator.tech
        knowledgebase_name: ""
        description: ""
        url: https://openapi-generator.tech
        excel: excel
        youtube_link: https://openapi-generator.tech
        pdf: pdf
        service: ""
        epub: epub
        image_file: image_file
        txt_file: txt_file
        auth_token: auth_token
        wikipedia_query: wikipedia_query
        powerpoint: powerpoint
        community_description: ""
      properties:
        tenant_name:
          type: string
        tool_name:
          type: string
        knowledgebase_name:
          default: ""
          type: string
        description:
          default: ""
          type: string
        service:
          default: ""
          type: string
        chat_description:
          default: ""
          type: string
        community_description:
          default: ""
          type: string
        survey_description:
          default: ""
          type: string
        service_description:
          default: ""
          type: string
        pdf:
          type: string
        csv:
          type: string
        excel:
          type: string
        epub:
          type: string
        image_file:
          type: string
        word_document:
          type: string
        txt_file:
          type: string
        powerpoint:
          type: string
        google_drive_link:
          format: uri
          type: string
        youtube_link:
          format: uri
          type: string
        url:
          format: uri
          type: string
        wikipedia_query:
          type: string
        auth_token:
          type: string
      required:
      - tenant_name
      - tool_name
      type: object
    CustomerFeedback:
      example:
        call: ""
        customer_feedback_id: 0
        rating: 441289069
        feedback_category: ""
        feedback_text: feedback_text
      properties:
        customer_feedback_id:
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        rating:
          description: Rating on a scale of 1 to 5.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        feedback_text:
          description: Detailed text feedback from the customer.
          nullable: true
          type: string
        feedback_category:
          allOf:
          - $ref: '#/components/schemas/FeedbackCategoryEnum'
          description: |-
            Category of the feedback.

            * `SERVICE` - Service
            * `TECHNICAL` - Technical Issue
            * `GENERAL` - General Feedback
      required:
      - call
      - customer_feedback_id
      - feedback_category
      - rating
      type: object
    Delegation:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
        delegation_id: 0
        assigned_chat: 1
        delegated_by: 5
        admin:
        - tenant_id: 0
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        - tenant_id: 0
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        department_delegated_to: 2
        employee:
        - tenant_id: 6
          gender: null
          phonenumber: phonenumber
          last_name: last_name
          confirm_password: confirm_password
          token: token
          password: password
          user_type: null
          DOB: 2000-01-23
          id: 0
          first_name: first_name
          email: email
          username: username
        - tenant_id: 6
          gender: null
          phonenumber: phonenumber
          last_name: last_name
          confirm_password: confirm_password
          token: token
          password: password
          user_type: null
          DOB: 2000-01-23
          id: 0
          first_name: first_name
          email: email
          username: username
        assigned_issue: 6
        assigned_service: 5
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        delegation_id:
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/TenantInfo'
        employee:
          items:
            $ref: '#/components/schemas/Employee'
          type: array
        admin:
          items:
            $ref: '#/components/schemas/Admin'
          type: array
        assigned_issue:
          description: The issue ID UUID .
          nullable: true
          type: integer
        assigned_chat:
          description: The chat ID UUID for an instance of a chat.
          nullable: true
          type: integer
        assigned_service:
          nullable: true
          type: integer
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        delegated_by:
          nullable: true
          type: integer
        department_delegated_to:
          description: The department ID.
          nullable: true
          type: integer
      required:
      - admin
      - delegation_id
      - employee
      - tenant_id
      - timestamp
      type: object
    Department:
      example:
        department_id: 0
        name: name
        description: description
        employees:
        - 1
        - 1
        tenant: 6
        admins:
        - 5
        - 5
      properties:
        department_id:
          description: The department ID.
          readOnly: true
          type: integer
        tenant:
          description: The tenant this department belongs to
          type: integer
        name:
          description: Name of the department
          maxLength: 100
          type: string
        description:
          description: Description of the department
          nullable: true
          type: string
        employees:
          items:
            type: integer
          readOnly: true
          type: array
        admins:
          items:
            type: integer
          readOnly: true
          type: array
      required:
      - admins
      - department_id
      - employees
      - name
      - tenant
      type: object
    EmailVerification:
      example:
        token: 0
      properties:
        token:
          type: integer
      required:
      - token
      type: object
    Employee:
      description: Serializers registration requests and creates a new user.
      example:
        tenant_id: 6
        gender: null
        phonenumber: phonenumber
        last_name: last_name
        confirm_password: confirm_password
        token: token
        password: password
        user_type: null
        DOB: 2000-01-23
        id: 0
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        user_type:
          $ref: '#/components/schemas/UserType8ceEnum'
        tenant_id:
          description: Display name of the tenant
          type: integer
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        confirm_password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          maxLength: 255
          readOnly: true
          type: string
      required:
      - confirm_password
      - email
      - first_name
      - id
      - last_name
      - password
      - tenant_id
      - token
      - username
      type: object
    EmployeeProfile:
      example:
        country: country
        profile_photo: profile_photo
        city: city
        county: county
        location: location
        postal_code: postal_code
        username: username
      properties:
        username:
          type: string
        profile_photo:
          readOnly: true
          type: string
        country:
          type: string
        county:
          type: string
        city:
          type: string
        postal_code:
          type: string
        location:
          type: string
      required:
      - profile_photo
      - username
      type: object
    EmployeeUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/EmployeeProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      required:
      - city
      - country
      - county
      - email
      - first_name
      - id
      - last_name
      - location
      - password
      - postal_code
      - profile
      - profile_photo
      - token
      - username
      type: object
    Event:
      example:
        client: ""
        type: null
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          $ref: '#/components/schemas/EventTypeEnum'
        client:
          allOf:
          - $ref: '#/components/schemas/ClientCommunity'
          readOnly: true
        timestamp:
          format: date-time
          readOnly: true
          type: string
      required:
      - client
      - timestamp
      - type
      type: object
    EventTypeEnum:
      description: |-
        * `Joined` - Joined
        * `Left` - Left
      enum:
      - Joined
      - Left
      type: string
    FavoriteCommunitiesClient:
      example:
        favorites:
        - tenant_id:
            tenant_id: 6
            tenant_name: tenant_name
            sub_category: sub_category
            registration_number: registration_number
            industry: ""
            token: token
          community_id: 0
          description: description
        - tenant_id:
            tenant_id: 6
            tenant_name: tenant_name
            sub_category: sub_category
            registration_number: registration_number
            industry: ""
            token: token
          community_id: 0
          description: description
        email: email
        username: username
      properties:
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        favorites:
          items:
            $ref: '#/components/schemas/FavoriteCommunity'
          type: array
      required:
      - email
      - favorites
      - username
      type: object
    FavoriteCommunity:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
          sub_category: sub_category
          registration_number: registration_number
          industry: ""
          token: token
        community_id: 0
        description: description
      properties:
        community_id:
          description: The tenant community ID UUID.
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/CommunityTenant'
        description:
          description: Description of the community.
          maxLength: 255
          nullable: true
          type: string
      required:
      - community_id
      - tenant_id
      type: object
    Feature:
      example:
        extra_features: ""
        name: name
        description: description
      properties:
        name:
          maxLength: 100
          type: string
        description:
          type: string
        extra_features:
          nullable: true
      required:
      - description
      - name
      type: object
    FeedbackCategoryEnum:
      description: |-
        * `SERVICE` - Service
        * `TECHNICAL` - Technical Issue
        * `GENERAL` - General Feedback
      enum:
      - SERVICE
      - TECHNICAL
      - GENERAL
      type: string
    FreeTrialEnroll:
      example:
        tenant_id: 0
        email: email
      properties:
        email:
          format: email
          type: string
        tenant_id:
          type: integer
      required:
      - email
      - tenant_id
      type: object
    GenderEnum:
      description: |-
        * `Male` - Male
        * `Female` - Female
        * `Other` - Other
      enum:
      - Male
      - Female
      - Other
      type: string
    IndustryEnum:
      description: |-
        * `IT` - Information Technology
        * `Finance` - Finance
        * `Healthcare` - Healthcare
        * `Education` - Education
        * `Retail` - Retail
        * `Manufacturing` - Manufacturing
        * `Automotive` - Automotive
        * `Hospitality` - Hospitality
        * `RealEstate` - Real Estate
        * `Media` - Media
        * `Telecommunications` - Telecommunications
        * `Energy` - Energy
        * `Transportation` - Transportation
        * `Agriculture` - Agriculture
      enum:
      - IT
      - Finance
      - Healthcare
      - Education
      - Retail
      - Manufacturing
      - Automotive
      - Hospitality
      - RealEstate
      - Media
      - Telecommunications
      - Energy
      - Transportation
      - Agriculture
      type: string
    InteractionHistory:
      example:
        call: ""
        interaction_type: ""
        details: details
        interaction_history_id: 0
      properties:
        interaction_history_id:
          description: The call id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        interaction_type:
          allOf:
          - $ref: '#/components/schemas/InteractionTypeEnum'
          description: |-
            Type of interaction.

            * `NOTE` - Note
            * `DECISION` - Decision
            * `ESCALATION` - Escalation
        details:
          description: Details of the interaction.
          type: string
      required:
      - call
      - details
      - interaction_history_id
      - interaction_type
      type: object
    InteractionTopics:
      example:
        interaction_topics_id: 0
        name: name
        description: description
        category: 6
      properties:
        interaction_topics_id:
          description: The chat ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        name:
          description: Name of the topic
          maxLength: 50
          type: string
        description:
          description: Description of the topic
          maxLength: 50
          type: string
        category:
          description: The topic category
          type: integer
      required:
      - category
      - description
      - interaction_topics_id
      - name
      type: object
    InteractionTypeEnum:
      description: |-
        * `NOTE` - Note
        * `DECISION` - Decision
        * `ESCALATION` - Escalation
      enum:
      - NOTE
      - DECISION
      - ESCALATION
      type: string
    InviteEmployees:
      example:
        tenant_id: 0
        user_type: null
        email: email
      properties:
        email:
          format: email
          maxLength: 254
          type: string
        tenant_id:
          description: The tenant chats ID.
          type: integer
        user_type:
          $ref: '#/components/schemas/UserType3daEnum'
      required:
      - email
      - tenant_id
      type: object
    Issue:
      example:
        num_comments: 6
        community_id:
          key: ""
        visible: true
        issue_id: 0
        issue: issue
        description: description
        solved: true
        created_at: created_at
        num_unique_users: 1
        client_id:
          key: ""
        timestamp: 2000-01-23T04:56:07.000+00:00
        tags:
        - community_id: 6
          name: name
        - community_id: 6
          name: name
      properties:
        issue_id:
          description: The issue ID UUID .
          readOnly: true
          type: integer
        issue:
          description: Display name of the issue that's created
          maxLength: 100
          type: string
        description:
          description: Description of the issue
          maxLength: 255
          type: string
        solved:
          description: Was the issue solved or not
          type: boolean
        client_id:
          additionalProperties: {}
          readOnly: true
          type: object
        community_id:
          additionalProperties: {}
          readOnly: true
          type: object
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/CommunityTag'
          type: array
        num_comments:
          readOnly: true
          type: integer
        num_unique_users:
          readOnly: true
          type: integer
        visible:
          description: Was the issue solved or not
          nullable: true
          type: boolean
      required:
      - client_id
      - community_id
      - created_at
      - description
      - issue
      - issue_id
      - num_comments
      - num_unique_users
      - tags
      - timestamp
      type: object
    JoinCommunity:
      example:
        community_id: 0
        client_id: 6
      properties:
        community_id:
          type: integer
        client_id:
          type: integer
      required:
      - client_id
      - community_id
      type: object
    Knowledgebase:
      example:
        tenant_id: 6
        knowledgebase_id: 0
        service_prompts:
        - metadata: ""
          service_description: service_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 3
          date_time_created_at: 2000-01-23
          service: 9
          created_at: created_at
          id: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          service_description: service_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 3
          date_time_created_at: 2000-01-23
          service: 9
          created_at: created_at
          id: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        type_of_datasource: type_of_datasource
        datasource_target: datasource_target
        survey_prompts:
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          survey_description: survey_description
          knowledgebase: 4
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 2
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          survey_description: survey_description
          knowledgebase: 4
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 2
          timestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        community_prompts:
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 2
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
          community_description: community_description
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 2
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
          community_description: community_description
        chat_prompts:
        - metadata: ""
          chat_description: chat_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 5
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 1
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          chat_description: chat_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 5
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 1
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        knowledgebase_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
          type: integer
        name:
          description: The name of the knowledgebase
          maxLength: 100
          type: string
        description:
          description: description
          maxLength: 1000
          nullable: true
          type: string
        type_of_datasource:
          maxLength: 50
          nullable: true
          type: string
        datasource_target:
          description: This will be responsible for ft=etching the information source
            passed
          maxLength: 200
          nullable: true
          type: string
        chat_prompts:
          items:
            $ref: '#/components/schemas/ChatPrompts'
          readOnly: true
          type: array
        community_prompts:
          items:
            $ref: '#/components/schemas/CommunityPrompts'
          readOnly: true
          type: array
        service_prompts:
          items:
            $ref: '#/components/schemas/ServicePrompts'
          readOnly: true
          type: array
        survey_prompts:
          items:
            $ref: '#/components/schemas/SurveyPrompts'
          readOnly: true
          type: array
      required:
      - chat_prompts
      - community_prompts
      - knowledgebase_id
      - name
      - service_prompts
      - survey_prompts
      - tenant_id
      type: object
    LeaveCommunity:
      example:
        community_id: 0
        client_id: 6
      properties:
        community_id:
          type: integer
        client_id:
          type: integer
      required:
      - client_id
      - community_id
      type: object
    Member:
      example:
        join_timestamp: 2000-01-23T04:56:07.000+00:00
        gender: null
        DOB: 2000-01-23
        phonenumber: phonenumber
        rating: 5.637376656633329
        last_name: last_name
        id: 1
        first_name: first_name
        email: email
        issues_count: 5
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        join_timestamp:
          format: date-time
          readOnly: true
          type: string
        issues_count:
          readOnly: true
          type: integer
        rating:
          format: double
          readOnly: true
          type: number
      required:
      - email
      - first_name
      - id
      - issues_count
      - join_timestamp
      - last_name
      - rating
      - username
      type: object
    Message:
      example:
        message_sender: ""
        escalated: true
        text_content: text_content
        channel: null
        topic: null
        message_id: 0
        voice_content: https://openapi-generator.tech
        chat_id: 6
      properties:
        message_id:
          description: The message ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        chat_id:
          description: The chat ID UUID for an instance of a chat.
          type: integer
        text_content:
          description: Message text content
          maxLength: 255
          nullable: true
          type: string
        voice_content:
          description: The voice note sent
          format: uri
          nullable: true
          type: string
        message_sender:
          allOf:
          - $ref: '#/components/schemas/MessageSenderEnum'
          description: |-
            Either the message is sent by the agent or by the tenant

            * `client` - client
            * `tenant` - tenant
            * `tenant_iva` - tenant_iva
            * `anonymous_client` - anonymous_client
        escalated:
          description: Say whether a client escalated a chat to a human agent.
          nullable: true
          type: boolean
        channel:
          $ref: '#/components/schemas/ChannelEnum'
        topic:
          $ref: '#/components/schemas/TopicEnum'
      required:
      - chat_id
      - message_id
      - message_sender
      type: object
    MessageSenderEnum:
      description: |-
        * `client` - client
        * `tenant` - tenant
        * `tenant_iva` - tenant_iva
        * `anonymous_client` - anonymous_client
      enum:
      - client
      - tenant
      - tenant_iva
      - anonymous_client
      type: string
    Metadata:
      example:
        tenant_id: ""
        metadata_id: 0
      properties:
        metadata_id:
          description: The tenant chats ID UUID for all chats.
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
      required:
      - metadata_id
      - tenant_id
      type: object
    Nested:
      properties:
        issue_id:
          description: The issue ID UUID .
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        community_ai_assistant:
          maxLength: 100
          nullable: true
          type: string
        issue:
          description: Display name of the issue that's created
          maxLength: 100
          type: string
        description:
          description: Description of the issue
          maxLength: 255
          type: string
        solved:
          description: Was the issue solved or not
          type: boolean
        visible:
          description: Was the issue solved or not
          nullable: true
          type: boolean
        client_id:
          description: Display name of the client
          nullable: true
          type: integer
        unauthenticated_client:
          description: The webhookevent chats ID UUID.
          nullable: true
          type: integer
        community_id:
          description: Display name of the community
          type: integer
        tags:
          items:
            type: integer
          type: array
      required:
      - community_id
      - created_at
      - date_time_created_at
      - description
      - issue
      - issue_id
      - timestamp
      - updated_at
      type: object
    Notifications:
      example:
        read: true
        guest_user: 5
        notifications_id: 0
        admin: 1
        client: 5
        employee: 6
        delegation:
          tenant_id:
            tenant_id: 6
            tenant_name: tenant_name
          delegation_id: 0
          assigned_chat: 1
          delegated_by: 5
          admin:
          - tenant_id: 0
            password: password
            user_type: null
            gender: null
            DOB: 2000-01-23
            phonenumber: phonenumber
            last_name: last_name
            first_name: first_name
            email: email
            username: username
            confirm_password: confirm_password
            token: token
          - tenant_id: 0
            password: password
            user_type: null
            gender: null
            DOB: 2000-01-23
            phonenumber: phonenumber
            last_name: last_name
            first_name: first_name
            email: email
            username: username
            confirm_password: confirm_password
            token: token
          department_delegated_to: 2
          employee:
          - tenant_id: 6
            gender: null
            phonenumber: phonenumber
            last_name: last_name
            confirm_password: confirm_password
            token: token
            password: password
            user_type: null
            DOB: 2000-01-23
            id: 0
            first_name: first_name
            email: email
            username: username
          - tenant_id: 6
            gender: null
            phonenumber: phonenumber
            last_name: last_name
            confirm_password: confirm_password
            token: token
            password: password
            user_type: null
            DOB: 2000-01-23
            id: 0
            first_name: first_name
            email: email
            username: username
          assigned_issue: 6
          assigned_service: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
        notification_message: notification_message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        notifications_id:
          description: The notifications for an instance of a chat.
          readOnly: true
          type: integer
        employee:
          nullable: true
          type: integer
        admin:
          nullable: true
          type: integer
        client:
          nullable: true
          type: integer
        guest_user:
          description: The webhookevent chats ID UUID.
          nullable: true
          type: integer
        delegation:
          $ref: '#/components/schemas/Delegation'
        notification_message:
          description: Message content of the notification
          nullable: true
          type: string
        read:
          description: Whether the notification has been read or not
          type: boolean
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - delegation
      - notifications_id
      - timestamp
      type: object
    NullEnum:
      enum:
      - null
      type: string
    PaginatedTierList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - features:
          - extra_features: ""
            name: name
            description: description
          - extra_features: ""
            name: name
            description: description
          name: name
          prices:
          - company_type: ""
            amount: amount
            quota: ""
          - company_type: ""
            amount: amount
            quota: ""
        - features:
          - extra_features: ""
            name: name
            description: description
          - extra_features: ""
            name: name
            description: description
          name: name
          prices:
          - company_type: ""
            amount: amount
            quota: ""
          - company_type: ""
            amount: amount
            quota: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Tier'
          type: array
      type: object
    PaginatedUnverifiedUsersList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - user_type: null
          created_at: 2000-01-23T04:56:07.000+00:00
          email: email
        - user_type: null
          created_at: 2000-01-23T04:56:07.000+00:00
          email: email
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/UnverifiedUsers'
          type: array
      type: object
    PatchedAdminUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/AdminProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      type: object
    PatchedAgentPerformance:
      example:
        tenant_id: ""
        average_call_duration: average_call_duration
        average_satisfaction_score: average_satisfaction_score
        resolution_rate: resolution_rate
        total_calls_handled: 441289069
        agent_performance_id: 0
      properties:
        agent_performance_id:
          readOnly: true
          type: integer
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/TenantInfo'
          readOnly: true
        average_call_duration:
          description: Average duration of calls handled by the agent.
          type: string
        average_satisfaction_score:
          description: Average satisfaction score from customer feedback.
          format: decimal
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        resolution_rate:
          description: Percentage of calls resolved by the agent.
          format: decimal
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        total_calls_handled:
          description: Total number of calls handled by the agent.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
      type: object
    PatchedCall:
      example:
        tenant_id: ""
        duration: duration
        client_caller:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        success: true
        guest_called: 6
        call_id: 0
      properties:
        call_id:
          description: The call id.
          readOnly: true
          type: integer
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/TenantInfo'
          readOnly: true
        duration:
          type: string
        success:
          type: boolean
        client_caller:
          $ref: '#/components/schemas/ClientInfo'
        guest_called:
          description: Display name of the client
          nullable: true
          type: integer
      type: object
    PatchedCallMetrics:
      example:
        call: ""
        transcripts: ""
        call_satisfaction: true
        call_metrics_id: 0
        issue_resolution: true
      properties:
        call_metrics_id:
          description: The call metrics id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        transcripts: {}
        call_satisfaction:
          type: boolean
        issue_resolution:
          type: boolean
      type: object
    PatchedCallResolution:
      example:
        call: ""
        follow_up_date: 2000-01-23T04:56:07.000+00:00
        pending_actions: ""
        call_resolution_id: 0
        follow_up_required: true
        status: null
      properties:
        call_resolution_id:
          description: The call resolution id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        status:
          $ref: '#/components/schemas/CallResolutionStatusEnum'
        pending_actions:
          nullable: true
        follow_up_required:
          type: boolean
        follow_up_date:
          format: date-time
          nullable: true
          type: string
      type: object
    PatchedChat:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
        guest_client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        iva_enabled: true
        chat_owner:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        anonymous_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        created_at: created_at
        client_satisfaction: true
        chat_id: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        chat_id:
          description: The chat ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/TenantInfo'
        guest_client:
          $ref: '#/components/schemas/ClientInfo'
        chat_owner:
          $ref: '#/components/schemas/ClientInfo'
        anonymous_user:
          $ref: '#/components/schemas/AnonymousUser'
        client_satisfaction:
          description: Whether client is satisfied or not
          nullable: true
          type: boolean
        iva_enabled:
          description: Enable or disable whether the virtual assistant should talk
            to a client
          type: boolean
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
      type: object
    PatchedClientUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/ClientProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      type: object
    PatchedCustomerFeedback:
      example:
        call: ""
        customer_feedback_id: 0
        rating: 441289069
        feedback_category: ""
        feedback_text: feedback_text
      properties:
        customer_feedback_id:
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        rating:
          description: Rating on a scale of 1 to 5.
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        feedback_text:
          description: Detailed text feedback from the customer.
          nullable: true
          type: string
        feedback_category:
          allOf:
          - $ref: '#/components/schemas/FeedbackCategoryEnum'
          description: |-
            Category of the feedback.

            * `SERVICE` - Service
            * `TECHNICAL` - Technical Issue
            * `GENERAL` - General Feedback
      type: object
    PatchedDelegation:
      example:
        tenant_id:
          tenant_id: 6
          tenant_name: tenant_name
        delegation_id: 0
        assigned_chat: 1
        delegated_by: 5
        admin:
        - tenant_id: 0
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        - tenant_id: 0
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        department_delegated_to: 2
        employee:
        - tenant_id: 6
          gender: null
          phonenumber: phonenumber
          last_name: last_name
          confirm_password: confirm_password
          token: token
          password: password
          user_type: null
          DOB: 2000-01-23
          id: 0
          first_name: first_name
          email: email
          username: username
        - tenant_id: 6
          gender: null
          phonenumber: phonenumber
          last_name: last_name
          confirm_password: confirm_password
          token: token
          password: password
          user_type: null
          DOB: 2000-01-23
          id: 0
          first_name: first_name
          email: email
          username: username
        assigned_issue: 6
        assigned_service: 5
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        delegation_id:
          readOnly: true
          type: integer
        tenant_id:
          $ref: '#/components/schemas/TenantInfo'
        employee:
          items:
            $ref: '#/components/schemas/Employee'
          type: array
        admin:
          items:
            $ref: '#/components/schemas/Admin'
          type: array
        assigned_issue:
          description: The issue ID UUID .
          nullable: true
          type: integer
        assigned_chat:
          description: The chat ID UUID for an instance of a chat.
          nullable: true
          type: integer
        assigned_service:
          nullable: true
          type: integer
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        delegated_by:
          nullable: true
          type: integer
        department_delegated_to:
          description: The department ID.
          nullable: true
          type: integer
      type: object
    PatchedDepartment:
      example:
        department_id: 0
        name: name
        description: description
        employees:
        - 1
        - 1
        tenant: 6
        admins:
        - 5
        - 5
      properties:
        department_id:
          description: The department ID.
          readOnly: true
          type: integer
        tenant:
          description: The tenant this department belongs to
          type: integer
        name:
          description: Name of the department
          maxLength: 100
          type: string
        description:
          description: Description of the department
          nullable: true
          type: string
        employees:
          items:
            type: integer
          readOnly: true
          type: array
        admins:
          items:
            type: integer
          readOnly: true
          type: array
      type: object
    PatchedEmployeeUser:
      description: Handles serialization and deserialization of user objects
      example:
        country: country
        gender: null
        profile_photo: profile_photo
        city: city
        profile: ""
        phonenumber: phonenumber
        county: county
        last_name: last_name
        token: token
        password: password
        DOB: 2000-01-23
        location: location
        id: 0
        postal_code: postal_code
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        username:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
        password:
          maxLength: 128
          minLength: 8
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
        profile:
          allOf:
          - $ref: '#/components/schemas/EmployeeProfile'
          writeOnly: true
        profile_photo:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        county:
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        postal_code:
          readOnly: true
          type: string
        location:
          readOnly: true
          type: string
      type: object
    PatchedInteractionHistory:
      example:
        call: ""
        interaction_type: ""
        details: details
        interaction_history_id: 0
      properties:
        interaction_history_id:
          description: The call id.
          readOnly: true
          type: integer
        call:
          allOf:
          - $ref: '#/components/schemas/Call'
          readOnly: true
        interaction_type:
          allOf:
          - $ref: '#/components/schemas/InteractionTypeEnum'
          description: |-
            Type of interaction.

            * `NOTE` - Note
            * `DECISION` - Decision
            * `ESCALATION` - Escalation
        details:
          description: Details of the interaction.
          type: string
      type: object
    PatchedIssue:
      example:
        num_comments: 6
        community_id:
          key: ""
        visible: true
        issue_id: 0
        issue: issue
        description: description
        solved: true
        created_at: created_at
        num_unique_users: 1
        client_id:
          key: ""
        timestamp: 2000-01-23T04:56:07.000+00:00
        tags:
        - community_id: 6
          name: name
        - community_id: 6
          name: name
      properties:
        issue_id:
          description: The issue ID UUID .
          readOnly: true
          type: integer
        issue:
          description: Display name of the issue that's created
          maxLength: 100
          type: string
        description:
          description: Description of the issue
          maxLength: 255
          type: string
        solved:
          description: Was the issue solved or not
          type: boolean
        client_id:
          additionalProperties: {}
          readOnly: true
          type: object
        community_id:
          additionalProperties: {}
          readOnly: true
          type: object
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/CommunityTag'
          type: array
        num_comments:
          readOnly: true
          type: integer
        num_unique_users:
          readOnly: true
          type: integer
        visible:
          description: Was the issue solved or not
          nullable: true
          type: boolean
      type: object
    PatchedKnowledgebase:
      example:
        tenant_id: 6
        knowledgebase_id: 0
        service_prompts:
        - metadata: ""
          service_description: service_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 3
          date_time_created_at: 2000-01-23
          service: 9
          created_at: created_at
          id: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          service_description: service_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 3
          date_time_created_at: 2000-01-23
          service: 9
          created_at: created_at
          id: 7
          timestamp: 2000-01-23T04:56:07.000+00:00
        type_of_datasource: type_of_datasource
        datasource_target: datasource_target
        survey_prompts:
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          survey_description: survey_description
          knowledgebase: 4
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 2
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          survey_description: survey_description
          knowledgebase: 4
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 2
          timestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        community_prompts:
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 2
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
          community_description: community_description
        - metadata: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 2
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
          community_description: community_description
        chat_prompts:
        - metadata: ""
          chat_description: chat_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 5
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 1
          timestamp: 2000-01-23T04:56:07.000+00:00
        - metadata: ""
          chat_description: chat_description
          updated_at: 2000-01-23T04:56:07.000+00:00
          knowledgebase: 5
          date_time_created_at: 2000-01-23
          created_at: created_at
          id: 1
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        knowledgebase_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
          type: integer
        name:
          description: The name of the knowledgebase
          maxLength: 100
          type: string
        description:
          description: description
          maxLength: 1000
          nullable: true
          type: string
        type_of_datasource:
          maxLength: 50
          nullable: true
          type: string
        datasource_target:
          description: This will be responsible for ft=etching the information source
            passed
          maxLength: 200
          nullable: true
          type: string
        chat_prompts:
          items:
            $ref: '#/components/schemas/ChatPrompts'
          readOnly: true
          type: array
        community_prompts:
          items:
            $ref: '#/components/schemas/CommunityPrompts'
          readOnly: true
          type: array
        service_prompts:
          items:
            $ref: '#/components/schemas/ServicePrompts'
          readOnly: true
          type: array
        survey_prompts:
          items:
            $ref: '#/components/schemas/SurveyPrompts'
          readOnly: true
          type: array
      type: object
    PatchedMessage:
      example:
        message_sender: ""
        escalated: true
        text_content: text_content
        channel: null
        topic: null
        message_id: 0
        voice_content: https://openapi-generator.tech
        chat_id: 6
      properties:
        message_id:
          description: The message ID UUID for an instance of a chat.
          readOnly: true
          type: integer
        chat_id:
          description: The chat ID UUID for an instance of a chat.
          type: integer
        text_content:
          description: Message text content
          maxLength: 255
          nullable: true
          type: string
        voice_content:
          description: The voice note sent
          format: uri
          nullable: true
          type: string
        message_sender:
          allOf:
          - $ref: '#/components/schemas/MessageSenderEnum'
          description: |-
            Either the message is sent by the agent or by the tenant

            * `client` - client
            * `tenant` - tenant
            * `tenant_iva` - tenant_iva
            * `anonymous_client` - anonymous_client
        escalated:
          description: Say whether a client escalated a chat to a human agent.
          nullable: true
          type: boolean
        channel:
          $ref: '#/components/schemas/ChannelEnum'
        topic:
          $ref: '#/components/schemas/TopicEnum'
      type: object
    PatchedNotifications:
      example:
        read: true
        guest_user: 5
        notifications_id: 0
        admin: 1
        client: 5
        employee: 6
        delegation:
          tenant_id:
            tenant_id: 6
            tenant_name: tenant_name
          delegation_id: 0
          assigned_chat: 1
          delegated_by: 5
          admin:
          - tenant_id: 0
            password: password
            user_type: null
            gender: null
            DOB: 2000-01-23
            phonenumber: phonenumber
            last_name: last_name
            first_name: first_name
            email: email
            username: username
            confirm_password: confirm_password
            token: token
          - tenant_id: 0
            password: password
            user_type: null
            gender: null
            DOB: 2000-01-23
            phonenumber: phonenumber
            last_name: last_name
            first_name: first_name
            email: email
            username: username
            confirm_password: confirm_password
            token: token
          department_delegated_to: 2
          employee:
          - tenant_id: 6
            gender: null
            phonenumber: phonenumber
            last_name: last_name
            confirm_password: confirm_password
            token: token
            password: password
            user_type: null
            DOB: 2000-01-23
            id: 0
            first_name: first_name
            email: email
            username: username
          - tenant_id: 6
            gender: null
            phonenumber: phonenumber
            last_name: last_name
            confirm_password: confirm_password
            token: token
            password: password
            user_type: null
            DOB: 2000-01-23
            id: 0
            first_name: first_name
            email: email
            username: username
          assigned_issue: 6
          assigned_service: 5
          timestamp: 2000-01-23T04:56:07.000+00:00
        notification_message: notification_message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        notifications_id:
          description: The notifications for an instance of a chat.
          readOnly: true
          type: integer
        employee:
          nullable: true
          type: integer
        admin:
          nullable: true
          type: integer
        client:
          nullable: true
          type: integer
        guest_user:
          description: The webhookevent chats ID UUID.
          nullable: true
          type: integer
        delegation:
          $ref: '#/components/schemas/Delegation'
        notification_message:
          description: Message content of the notification
          nullable: true
          type: string
        read:
          description: Whether the notification has been read or not
          type: boolean
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
      type: object
    PatchedService:
      example:
        tenant_id: 6
        resolution_period: resolution_period
        service_description: service_description
        service_type: 1
        is_active: true
        service_action_plan: ""
        service_id: 0
        service_availability: null
        ai_powered: true
        ai_solved: true
        details: ""
        name_of_service: name_of_service
      properties:
        service_id:
          readOnly: true
          type: integer
        tenant_id:
          description: The tenant chats ID.
          type: integer
        name_of_service:
          maxLength: 100
          type: string
        service_description:
          type: string
        service_type:
          type: integer
        is_active:
          type: boolean
        resolution_period:
          maxLength: 100
          type: string
        service_availability:
          $ref: '#/components/schemas/ServiceAvailabilityEnum'
        ai_powered:
          type: boolean
        ai_solved:
          nullable: true
          type: boolean
        details: {}
        service_action_plan: {}
      type: object
    PatchedServiceForms:
      example:
        service_form_id: 0
        form: ""
        service:
          tenant_id: 1
          resolution_period: resolution_period
          service_description: service_description
          service_type: 5
          is_active: true
          service_action_plan: ""
          service_id: 6
          service_availability: null
          ai_powered: true
          ai_solved: true
          details: ""
          name_of_service: name_of_service
        name_of_form: name_of_form
      properties:
        service_form_id:
          readOnly: true
          type: integer
        service:
          $ref: '#/components/schemas/Service'
        name_of_form:
          maxLength: 100
          type: string
        form: {}
      type: object
    PatchedServiceFormsResponse:
      example:
        unauthenticated_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        service_form:
          service_form_id: 0
          form: ""
          service:
            tenant_id: 1
            resolution_period: resolution_period
            service_description: service_description
            service_type: 5
            is_active: true
            service_action_plan: ""
            service_id: 6
            service_availability: null
            ai_powered: true
            ai_solved: true
            details: ""
            name_of_service: name_of_service
          name_of_form: name_of_form
        service_form_response_id: 0
        form_response: ""
        created_at: created_at
        client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
      properties:
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        service_form_response_id:
          readOnly: true
          type: integer
        service_form:
          $ref: '#/components/schemas/ServiceForms'
        client:
          $ref: '#/components/schemas/ClientServicesInfo'
        unauthenticated_user:
          $ref: '#/components/schemas/AnonymousUser'
        form_response: {}
      type: object
    PatchedServiceRequest:
      example:
        unauthenticated_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        ai_info: ""
        service_action_plan_response: ""
        service:
          tenant_id: 1
          resolution_period: resolution_period
          service_description: service_description
          service_type: 5
          is_active: true
          service_action_plan: ""
          service_id: 6
          service_availability: null
          ai_powered: true
          ai_solved: true
          details: ""
          name_of_service: name_of_service
        created_at: created_at
        service_requests_id: 0
        client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        request_details: ""
        status: ""
      properties:
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        service_requests_id:
          readOnly: true
          type: integer
        client:
          $ref: '#/components/schemas/ClientServicesInfo'
        unauthenticated_user:
          $ref: '#/components/schemas/AnonymousUser'
        service:
          $ref: '#/components/schemas/Service'
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceRequestStatusEnum'
          description: |-
            Status of the request.

            * `pending` - Pending
            * `completed` - Completed
            * `in_progress` - In Progress
        request_details:
          description: Specific request details in JSON format.
        ai_info:
          description: A json dump of the ai content generated
        service_action_plan_response: {}
      type: object
    PatchedSetNewPassword:
      example:
        password: password
        uidb64: uidb64
        token: token
      properties:
        password:
          maxLength: 68
          minLength: 6
          type: string
          writeOnly: true
        token:
          minLength: 1
          type: string
          writeOnly: true
        uidb64:
          minLength: 1
          type: string
          writeOnly: true
      type: object
    Payment:
      example:
        transaction_id: transaction_id
        amount: amount
        updated_at: 2000-01-23T04:56:07.000+00:00
        payload: ""
        payment_payload: ""
        merchant_ref: merchant_ref
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        subscription: 6
        complete: true
      properties:
        id:
          readOnly: true
          type: integer
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        merchant_ref:
          maxLength: 32
          type: string
        transaction_id:
          maxLength: 128
          nullable: true
          type: string
        amount:
          format: decimal
          pattern: "^-?\\d{0,4}(?:\\.\\d{0,2})?$"
          type: string
        complete:
          type: boolean
        payload:
          nullable: true
        payment_payload:
          nullable: true
        subscription:
          type: integer
      required:
      - amount
      - created_at
      - id
      - merchant_ref
      - subscription
      - updated_at
      type: object
    PaymentsTenant:
      properties:
        tenant_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_name:
          description: name of the company
          maxLength: 30
          type: string
        industry:
          allOf:
          - $ref: '#/components/schemas/IndustryEnum'
          description: |-
            Industry of the company

            * `IT` - Information Technology
            * `Finance` - Finance
            * `Healthcare` - Healthcare
            * `Education` - Education
            * `Retail` - Retail
            * `Manufacturing` - Manufacturing
            * `Automotive` - Automotive
            * `Hospitality` - Hospitality
            * `RealEstate` - Real Estate
            * `Media` - Media
            * `Telecommunications` - Telecommunications
            * `Energy` - Energy
            * `Transportation` - Transportation
            * `Agriculture` - Agriculture
        token:
          description: Token for the tenant
          maxLength: 500
          nullable: true
          type: string
        sub_category:
          maxLength: 30
          nullable: true
          type: string
        registration_number:
          description: The business registration number
          maxLength: 500
          nullable: true
          type: string
      required:
      - industry
      - tenant_id
      - tenant_name
      type: object
    Price:
      example:
        company_type: ""
        amount: amount
        quota: ""
      properties:
        quota:
          allOf:
          - $ref: '#/components/schemas/Quota'
          readOnly: true
        amount:
          format: decimal
          pattern: "^-?\\d{0,4}(?:\\.\\d{0,2})?$"
          type: string
        company_type:
          allOf:
          - $ref: '#/components/schemas/CompanyType'
          readOnly: true
      required:
      - amount
      - company_type
      - quota
      type: object
    Product:
      example:
        tenant_id: 6
        price: price
        product_id: 0
        name: name
        description: description
      properties:
        product_id:
          description: The tenant chats ID UUID for all chats.
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
          type: integer
        name:
          description: name of the product
          maxLength: 30
          type: string
        description:
          description: description of the product
          maxLength: 200
          type: string
        price:
          description: price of the product
          maxLength: 30
          type: string
      required:
      - description
      - name
      - price
      - product_id
      - tenant_id
      type: object
    PromptSurvey:
      example:
        tenant_id: 6
        prompt_survey_id: 0
        survey_questions: ""
        survey_topic: survey_topic
        survey_description: survey_description
        unauthenticated_client:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        client:
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          id: 0
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        survey_prompt: survey_prompt
        survey_type: null
      properties:
        prompt_survey_id:
          description: The lilling details id ID UUID
          readOnly: true
          type: integer
        tenant_id:
          readOnly: true
          type: integer
        survey_topic:
          description: The survey topic
          maxLength: 255
          type: string
        survey_description:
          description: The survey description
          maxLength: 200
          type: string
        survey_prompt:
          description: The survey context
          maxLength: 20
          type: string
        survey_questions:
          description: The survey questions
          nullable: true
        client:
          $ref: '#/components/schemas/Client'
        unauthenticated_client:
          $ref: '#/components/schemas/AnonymousUser'
        survey_type:
          $ref: '#/components/schemas/PromptSurvey_survey_type'
      required:
      - client
      - prompt_survey_id
      - survey_description
      - survey_prompt
      - survey_topic
      - tenant_id
      - unauthenticated_client
      type: object
    QuestionInducedSurvey:
      example:
        tenant_id: 6
        question_induced_survey_id: 0
        survey_questions: ""
        survey_topic: survey_topic
        survey_description: survey_description
        unauthenticated_client:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        client:
          password: password
          user_type: null
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          id: 0
          first_name: first_name
          email: email
          username: username
          confirm_password: confirm_password
          token: token
        survey_type: null
        questions_induced: ""
      properties:
        question_induced_survey_id:
          description: The lilling details id ID UUID
          readOnly: true
          type: integer
        tenant_id:
          readOnly: true
          type: integer
        survey_topic:
          description: The survey topic
          maxLength: 255
          type: string
        survey_description:
          description: The survey description
          maxLength: 200
          type: string
        questions_induced:
          description: The survey questions
          nullable: true
        survey_questions:
          description: The survey questions
          nullable: true
        client:
          $ref: '#/components/schemas/Client'
        unauthenticated_client:
          $ref: '#/components/schemas/AnonymousUser'
        survey_type:
          $ref: '#/components/schemas/PromptSurvey_survey_type'
      required:
      - client
      - question_induced_survey_id
      - survey_description
      - survey_topic
      - tenant_id
      - unauthenticated_client
      type: object
    Quota:
      properties:
        name:
          maxLength: 100
          type: string
        duration:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - duration
      - name
      type: object
    ResetPasswordEmailRequest:
      example:
        email: email
        redirect_url: redirect_url
      properties:
        email:
          format: email
          minLength: 2
          type: string
        redirect_url:
          maxLength: 500
          type: string
      required:
      - email
      type: object
    Response:
      example:
        survey_response: ""
        survey_id: 6
        prompt_survey_id: 1
        questions_induced_survey_id: 5
        response_id: 0
        client:
          gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          id: 5
          first_name: first_name
          email: email
          username: username
        created_at: created_at
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        response_id:
          description: The lilling details id ID UUID
          readOnly: true
          type: integer
        survey_id:
          description: Display name of the tenant
          nullable: true
          type: integer
        prompt_survey_id:
          description: Display name of the tenant
          nullable: true
          type: integer
        questions_induced_survey_id:
          description: Display name of the tenant
          nullable: true
          type: integer
        client:
          $ref: '#/components/schemas/TargetAudience'
        survey_response:
          description: The survey response
          nullable: true
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
      required:
      - client
      - created_at
      - response_id
      - timestamp
      type: object
    Service:
      example:
        tenant_id: 1
        resolution_period: resolution_period
        service_description: service_description
        service_type: 5
        is_active: true
        service_action_plan: ""
        service_id: 6
        service_availability: null
        ai_powered: true
        ai_solved: true
        details: ""
        name_of_service: name_of_service
      properties:
        service_id:
          readOnly: true
          type: integer
        tenant_id:
          description: The tenant chats ID.
          type: integer
        name_of_service:
          maxLength: 100
          type: string
        service_description:
          type: string
        service_type:
          type: integer
        is_active:
          type: boolean
        resolution_period:
          maxLength: 100
          type: string
        service_availability:
          $ref: '#/components/schemas/ServiceAvailabilityEnum'
        ai_powered:
          type: boolean
        ai_solved:
          nullable: true
          type: boolean
        details: {}
        service_action_plan: {}
      required:
      - details
      - name_of_service
      - resolution_period
      - service_action_plan
      - service_availability
      - service_description
      - service_id
      - service_type
      - tenant_id
      type: object
    ServiceAvailabilityEnum:
      description: |-
        * `All_Clients` - All Clients
        * `Authenticated_Clients` - Authenticated Clients
        * `Unauthenticated_Clients` - Unauthenticated Clients
      enum:
      - All_Clients
      - Authenticated_Clients
      - Unauthenticated_Clients
      type: string
    ServiceForms:
      example:
        service_form_id: 0
        form: ""
        service:
          tenant_id: 1
          resolution_period: resolution_period
          service_description: service_description
          service_type: 5
          is_active: true
          service_action_plan: ""
          service_id: 6
          service_availability: null
          ai_powered: true
          ai_solved: true
          details: ""
          name_of_service: name_of_service
        name_of_form: name_of_form
      properties:
        service_form_id:
          readOnly: true
          type: integer
        service:
          $ref: '#/components/schemas/Service'
        name_of_form:
          maxLength: 100
          type: string
        form: {}
      required:
      - form
      - name_of_form
      - service
      - service_form_id
      type: object
    ServiceFormsResponse:
      example:
        unauthenticated_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        service_form:
          service_form_id: 0
          form: ""
          service:
            tenant_id: 1
            resolution_period: resolution_period
            service_description: service_description
            service_type: 5
            is_active: true
            service_action_plan: ""
            service_id: 6
            service_availability: null
            ai_powered: true
            ai_solved: true
            details: ""
            name_of_service: name_of_service
          name_of_form: name_of_form
        service_form_response_id: 0
        form_response: ""
        created_at: created_at
        client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
      properties:
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        service_form_response_id:
          readOnly: true
          type: integer
        service_form:
          $ref: '#/components/schemas/ServiceForms'
        client:
          $ref: '#/components/schemas/ClientServicesInfo'
        unauthenticated_user:
          $ref: '#/components/schemas/AnonymousUser'
        form_response: {}
      required:
      - client
      - created_at
      - form_response
      - service_form
      - service_form_response_id
      - unauthenticated_user
      type: object
    ServiceMessageChat:
      example:
        message_sender: ""
        service_request_chat: 6
        message_content: message_content
        service_request_message_id: 0
      properties:
        service_request_message_id:
          readOnly: true
          type: integer
        service_request_chat:
          description: The chat this message is a part of.
          type: integer
        message_content:
          description: The content of the message.
          type: string
        message_sender:
          allOf:
          - $ref: '#/components/schemas/MessageSenderEnum'
          description: |-
            Either the message is sent by the agent or by the tenant

            * `client` - client
            * `tenant` - tenant
            * `tenant_iva` - tenant_iva
            * `anonymous_client` - anonymous_client
      required:
      - message_content
      - message_sender
      - service_request_chat
      - service_request_message_id
      type: object
    ServicePrompts:
      example:
        metadata: ""
        service_description: service_description
        updated_at: 2000-01-23T04:56:07.000+00:00
        knowledgebase: 3
        date_time_created_at: 2000-01-23
        service: 9
        created_at: created_at
        id: 7
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        service_description:
          maxLength: 1000
          type: string
        service:
          description: To tie services knowledge base to it
          type: integer
        knowledgebase:
          description: Linking it to the knowledgebase
          type: integer
      required:
      - created_at
      - date_time_created_at
      - id
      - knowledgebase
      - service
      - service_description
      - timestamp
      - updated_at
      type: object
    ServiceRequest:
      example:
        unauthenticated_user:
          anonymous_user_id: 0
          contact: contact
          full_names: full_names
          email: email
          token: token
        ai_info: ""
        service_action_plan_response: ""
        service:
          tenant_id: 1
          resolution_period: resolution_period
          service_description: service_description
          service_type: 5
          is_active: true
          service_action_plan: ""
          service_id: 6
          service_availability: null
          ai_powered: true
          ai_solved: true
          details: ""
          name_of_service: name_of_service
        created_at: created_at
        service_requests_id: 0
        client:
          last_name: last_name
          id: 6
          first_name: first_name
          email: email
          username: username
        request_details: ""
        status: ""
      properties:
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        service_requests_id:
          readOnly: true
          type: integer
        client:
          $ref: '#/components/schemas/ClientServicesInfo'
        unauthenticated_user:
          $ref: '#/components/schemas/AnonymousUser'
        service:
          $ref: '#/components/schemas/Service'
        status:
          allOf:
          - $ref: '#/components/schemas/ServiceRequestStatusEnum'
          description: |-
            Status of the request.

            * `pending` - Pending
            * `completed` - Completed
            * `in_progress` - In Progress
        request_details:
          description: Specific request details in JSON format.
        ai_info:
          description: A json dump of the ai content generated
        service_action_plan_response: {}
      required:
      - ai_info
      - client
      - created_at
      - request_details
      - service
      - service_action_plan_response
      - service_requests_id
      - unauthenticated_user
      type: object
    ServiceRequestChat:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        service_request: ""
        service_request_chat_id: 0
      properties:
        service_request_chat_id:
          readOnly: true
          type: integer
        service_request:
          allOf:
          - $ref: '#/components/schemas/ServiceRequest'
          readOnly: true
        created_at:
          description: The date and time when the chat was created.
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: The date and time when the chat was last updated.
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - service_request
      - service_request_chat_id
      - updated_at
      type: object
    ServiceRequestStatusEnum:
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `in_progress` - In Progress
      enum:
      - pending
      - completed
      - in_progress
      type: string
    ServiceType:
      example:
        tenant_id: 6
        description: description
        id: 0
        type: null
      properties:
        id:
          readOnly: true
          type: integer
        tenant_id:
          description: The tenant chats ID.
          type: integer
        type:
          $ref: '#/components/schemas/ServiceTypeTypeEnum'
        description:
          type: string
      required:
      - description
      - id
      - tenant_id
      - type
      type: object
    ServiceTypeTypeEnum:
      description: |-
        * `problem_resolution` - Problem Resolution
        * `tech_support` - Technical Support
        * `billing_payment` - Billing and Payment Support
        * `cancellation_closure` - Cancellation and Closure
      enum:
      - problem_resolution
      - tech_support
      - billing_payment
      - cancellation_closure
      type: string
    SetNewPassword:
      example:
        password: password
        uidb64: uidb64
        token: token
      properties:
        password:
          maxLength: 68
          minLength: 6
          type: string
          writeOnly: true
        token:
          minLength: 1
          type: string
          writeOnly: true
        uidb64:
          minLength: 1
          type: string
          writeOnly: true
      required:
      - password
      - token
      - uidb64
      type: object
    Subscription:
      example:
        metadata: ""
        date_time_created_at: 2000-01-23
        expiry_date: 2000-01-23T04:56:07.000+00:00
        created_at: created_at
        is_valid_flag: true
        free_trial_used: true
        tier: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        quota: ""
        cancelled: true
        id: 0
        free_trial_end: 2000-01-23T04:56:07.000+00:00
        tenant: ""
        email: email
        timestamp: 2000-01-23T04:56:07.000+00:00
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        tenant:
          allOf:
          - $ref: '#/components/schemas/PaymentsTenant'
          readOnly: true
        tier:
          allOf:
          - $ref: '#/components/schemas/Tier'
          readOnly: true
        quota:
          allOf:
          - $ref: '#/components/schemas/Quota'
          readOnly: true
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        is_valid_flag:
          type: boolean
        start_date:
          format: date-time
          nullable: true
          type: string
        expiry_date:
          format: date-time
          nullable: true
          type: string
        email:
          format: email
          maxLength: 254
          nullable: true
          type: string
        free_trial_end:
          format: date-time
          nullable: true
          type: string
        free_trial_used:
          type: boolean
        cancelled:
          type: boolean
      required:
      - created_at
      - date_time_created_at
      - id
      - quota
      - tenant
      - tier
      - timestamp
      - updated_at
      type: object
    Survey:
      example:
        tenant_id: 6
        end_day: 2000-01-23
        response_count: 5
        survey_questions: ""
        survey_topic: survey_topic
        survey_description: survey_description
        start_day: 2000-01-23
        percentage_difference: 2.3021358869347655
        target_audience:
        - 1
        - 1
        survey_context: survey_context
        target_audience_count: 5
        survey_type: null
        question_count: 7
        survey_id: 0
        survey_status: true
      properties:
        survey_id:
          description: The lilling details id ID UUID
          readOnly: true
          type: integer
        tenant_id:
          description: Display name of the tenant
          type: integer
        survey_topic:
          description: The survey topic
          maxLength: 255
          type: string
        survey_description:
          description: The survey description
          maxLength: 200
          type: string
        survey_context:
          description: The survey context
          maxLength: 20
          type: string
        survey_questions:
          description: The survey questions
          nullable: true
        target_audience:
          description: The target audience/who to share with
          items:
            type: integer
          type: array
        survey_type:
          $ref: '#/components/schemas/PromptSurvey_survey_type'
        start_day:
          description: The start day of the survey
          format: date
          nullable: true
          readOnly: true
          type: string
        end_day:
          description: The end day of the survey
          format: date
          nullable: true
          type: string
        survey_status:
          type: boolean
        target_audience_count:
          readOnly: true
          type: integer
        response_count:
          readOnly: true
          type: integer
        percentage_difference:
          format: double
          readOnly: true
          type: number
        question_count:
          readOnly: true
          type: integer
      required:
      - percentage_difference
      - question_count
      - response_count
      - start_day
      - survey_context
      - survey_description
      - survey_id
      - survey_topic
      - target_audience_count
      - tenant_id
      type: object
    SurveyPrompts:
      example:
        metadata: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        survey_description: survey_description
        knowledgebase: 4
        date_time_created_at: 2000-01-23
        created_at: created_at
        id: 2
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        survey_description:
          maxLength: 1000
          type: string
        knowledgebase:
          description: Linking it to the knowledgebase
          type: integer
      required:
      - created_at
      - date_time_created_at
      - id
      - knowledgebase
      - survey_description
      - timestamp
      - updated_at
      type: object
    SurveyReport:
      example:
        conclusion: conclusion
        survey_id: 6
        survey_report_id: 0
        survey_reporter: 1
        survey_success: true
      properties:
        survey_report_id:
          description: The survey report id
          readOnly: true
          type: integer
        survey_id:
          description: Display name of the survey
          type: integer
        conclusion:
          description: The survey subgroup name
          type: string
        survey_success:
          description: The survey success
          type: boolean
        survey_reporter:
          description: Employee who made the survey review
          nullable: true
          type: integer
      required:
      - conclusion
      - survey_id
      - survey_report_id
      type: object
    SurveySubGroups:
      example:
        subgroup_description: subgroup_description
        survey_id: survey_id
        subgroup_clients:
        - gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          id: 5
          first_name: first_name
          email: email
          username: username
        - gender: null
          DOB: 2000-01-23
          phonenumber: phonenumber
          last_name: last_name
          id: 5
          first_name: first_name
          email: email
          username: username
        subgroup_name: subgroup_name
        survey_subgroups_id: 0
      properties:
        survey_subgroups_id:
          description: The survey report id
          readOnly: true
          type: integer
        survey_id:
          type: string
        subgroup_name:
          description: The survey subgroup name
          maxLength: 255
          type: string
        subgroup_description:
          description: The survey subgroup description
          maxLength: 255
          type: string
        subgroup_clients:
          items:
            $ref: '#/components/schemas/TargetAudience'
          type: array
      required:
      - subgroup_clients
      - subgroup_description
      - subgroup_name
      - survey_subgroups_id
      type: object
    SurveyTypeEnum:
      description: |-
        * `open_ended` - open_ended
        * `close_ended` - close_ended
      enum:
      - open_ended
      - close_ended
      type: string
    TargetAudience:
      example:
        gender: null
        DOB: 2000-01-23
        phonenumber: phonenumber
        last_name: last_name
        id: 5
        first_name: first_name
        email: email
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        username:
          maxLength: 255
          type: string
        email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 255
          type: string
        last_name:
          maxLength: 255
          type: string
        phonenumber:
          maxLength: 15
          nullable: true
          type: string
        gender:
          $ref: '#/components/schemas/Admin_gender'
        DOB:
          format: date
          nullable: true
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - username
      type: object
    Tenant:
      example:
        tenant_id: 0
        tenant_name: tenant_name
        sub_category: sub_category
        registration_number: registration_number
        industry: ""
        token: token
      properties:
        tenant_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_name:
          description: name of the company
          maxLength: 30
          type: string
        industry:
          allOf:
          - $ref: '#/components/schemas/IndustryEnum'
          description: |-
            Industry of the company

            * `IT` - Information Technology
            * `Finance` - Finance
            * `Healthcare` - Healthcare
            * `Education` - Education
            * `Retail` - Retail
            * `Manufacturing` - Manufacturing
            * `Automotive` - Automotive
            * `Hospitality` - Hospitality
            * `RealEstate` - Real Estate
            * `Media` - Media
            * `Telecommunications` - Telecommunications
            * `Energy` - Energy
            * `Transportation` - Transportation
            * `Agriculture` - Agriculture
        token:
          description: Token for the tenant
          maxLength: 500
          nullable: true
          type: string
        sub_category:
          maxLength: 30
          nullable: true
          type: string
        registration_number:
          description: The business registration number
          maxLength: 500
          nullable: true
          type: string
      required:
      - industry
      - tenant_id
      - tenant_name
      type: object
    TenantInfo:
      example:
        tenant_id: 6
        tenant_name: tenant_name
      properties:
        tenant_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        tenant_name:
          description: name of the company
          maxLength: 30
          type: string
      required:
      - tenant_id
      - tenant_name
      type: object
    Thread:
      example:
        thread_id: 0
        issue: ""
      properties:
        thread_id:
          description: The thread ID UUID for an instance of a thread.
          readOnly: true
          type: integer
        issue:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - issue
      - thread_id
      type: object
    Tier:
      example:
        features:
        - extra_features: ""
          name: name
          description: description
        - extra_features: ""
          name: name
          description: description
        name: name
        prices:
        - company_type: ""
          amount: amount
          quota: ""
        - company_type: ""
          amount: amount
          quota: ""
      properties:
        name:
          maxLength: 100
          type: string
        features:
          items:
            $ref: '#/components/schemas/Feature'
          readOnly: true
          type: array
        prices:
          items:
            $ref: '#/components/schemas/Price'
          readOnly: true
          type: array
      required:
      - features
      - name
      - prices
      type: object
    TokenLogin:
      example:
        tenant_id: ""
        user_type: ""
        last_name: last_name
        id: id
        first_name: first_name
        email: email
        token: 0
        username: username
      properties:
        token:
          type: integer
        id:
          maxLength: 255
          readOnly: true
          type: string
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/Tenant'
          readOnly: true
        username:
          maxLength: 255
          readOnly: true
          type: string
        first_name:
          maxLength: 255
          readOnly: true
          type: string
        last_name:
          maxLength: 255
          readOnly: true
          type: string
        email:
          maxLength: 255
          readOnly: true
          type: string
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeFc6Enum'
          readOnly: true
      required:
      - email
      - first_name
      - id
      - last_name
      - tenant_id
      - token
      - user_type
      - username
      type: object
    TokenSetNewPassword:
      example:
        password: password
        token: 0
      properties:
        password:
          maxLength: 68
          minLength: 6
          type: string
          writeOnly: true
        token:
          type: integer
      required:
      - password
      - token
      type: object
    TopicEnum:
      description: |-
        * `Mobile` - Mobile
        * `Website` - Website
      enum:
      - Mobile
      - Website
      type: string
    UnverifiedUsers:
      example:
        user_type: null
        created_at: 2000-01-23T04:56:07.000+00:00
        email: email
      properties:
        email:
          format: email
          maxLength: 254
          type: string
        created_at:
          format: date-time
          type: string
        user_type:
          $ref: '#/components/schemas/UserType3daEnum'
      required:
      - email
      type: object
    UserLogin:
      example:
        tenant_id: ""
        password: password
        user_type: ""
        last_name: last_name
        id: id
        first_name: first_name
        email: email
        username: username
        token: token
      properties:
        id:
          maxLength: 255
          readOnly: true
          type: string
        tenant_id:
          allOf:
          - $ref: '#/components/schemas/Tenant'
          readOnly: true
        username:
          maxLength: 255
          readOnly: true
          type: string
        first_name:
          maxLength: 255
          readOnly: true
          type: string
        last_name:
          maxLength: 255
          readOnly: true
          type: string
        email:
          maxLength: 255
          type: string
        password:
          maxLength: 128
          type: string
          writeOnly: true
        token:
          maxLength: 255
          readOnly: true
          type: string
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeFc6Enum'
          readOnly: true
      required:
      - email
      - first_name
      - id
      - last_name
      - password
      - tenant_id
      - token
      - user_type
      - username
      type: object
    UserType3daEnum:
      description: |-
        * `employee` - employee
        * `admin` - admin
      enum:
      - employee
      - admin
      type: string
    UserType8ceEnum:
      description: |-
        * `client` - client
        * `employee` - employee
        * `admin` - admin
      enum:
      - client
      - employee
      - admin
      type: string
    UserTypeFc6Enum:
      description: |-
        * `Admin` - Admin
        * `Employee` - Employee
        * `Client` - Client
      enum:
      - Admin
      - Employee
      - Client
      type: string
    VerifyUsersToken:
      example:
        token: 0
      properties:
        token:
          type: integer
      required:
      - token
      type: object
    VirtualAssistant:
      example:
        tenant_id: 6
        temprature: temprature
        metadata: ""
        persona: persona
        date_time_created_at: 2000-01-23
        created_at: created_at
        accuracy: accuracy
        industry: industry
        updated_at: 2000-01-23T04:56:07.000+00:00
        virtual_assistant_id: 0
        nickname: nickname
        first_name: first_name
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        virtual_assistant_id:
          description: The tenant chats ID.
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_name:
          description: name of the company
          maxLength: 30
          type: string
        industry:
          description: industry of the company
          maxLength: 30
          type: string
        nickname:
          description: industry of the company
          maxLength: 30
          type: string
        persona:
          description: industry of the company
          maxLength: 30
          type: string
        temprature:
          description: industry of the company
          maxLength: 30
          type: string
        accuracy:
          description: industry of the company
          maxLength: 30
          type: string
        tenant_id:
          description: Display name of the tenant
          type: integer
      required:
      - accuracy
      - created_at
      - date_time_created_at
      - first_name
      - industry
      - nickname
      - persona
      - temprature
      - tenant_id
      - timestamp
      - updated_at
      - virtual_assistant_id
      type: object
    VirtualAssistantDocuments:
      example:
        metadata: ""
        pdf: https://openapi-generator.tech
        updated_at: 2000-01-23T04:56:07.000+00:00
        date_time_created_at: 2000-01-23
        virtual_assistant_id: 6
        created_at: created_at
        id: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        metadata:
          description: Metadata
          nullable: true
        created_at:
          format: time
          nullable: true
          readOnly: true
          type: string
        date_time_created_at:
          format: date
          nullable: true
          readOnly: true
          type: string
        timestamp:
          description: The timestamp of the chat.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        pdf:
          description: PDF files associated with the virtual assistant.
          format: uri
          type: string
        virtual_assistant_id:
          description: The virtual assistant ID.
          type: integer
      required:
      - created_at
      - date_time_created_at
      - id
      - pdf
      - timestamp
      - updated_at
      - virtual_assistant_id
      type: object
    Admin_gender:
      description: |-
        Enter your gender.

        * `Male` - Male
        * `Female` - Female
        * `Other` - Other
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/GenderEnum'
      - $ref: '#/components/schemas/BlankEnum'
    AssistantTrainingProgressase_status:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/AssistantTrainingProgressaseStatusEnum'
      - $ref: '#/components/schemas/BlankEnum'
    PromptSurvey_survey_type:
      description: |-
        The survey type

        * `open_ended` - open_ended
        * `close_ended` - close_ended
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/SurveyTypeEnum'
      - $ref: '#/components/schemas/BlankEnum'
