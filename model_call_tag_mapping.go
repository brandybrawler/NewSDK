/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CallTagMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallTagMapping{}

// CallTagMapping struct for CallTagMapping
type CallTagMapping struct {
	// The call tag mapping id.
	CallTagMappingId int32 `json:"call_tag_mapping_id"`
	Call Call `json:"call"`
	Tag CallTag `json:"tag"`
}

type _CallTagMapping CallTagMapping

// NewCallTagMapping instantiates a new CallTagMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallTagMapping(callTagMappingId int32, call Call, tag CallTag) *CallTagMapping {
	this := CallTagMapping{}
	this.CallTagMappingId = callTagMappingId
	this.Call = call
	this.Tag = tag
	return &this
}

// NewCallTagMappingWithDefaults instantiates a new CallTagMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallTagMappingWithDefaults() *CallTagMapping {
	this := CallTagMapping{}
	return &this
}

// GetCallTagMappingId returns the CallTagMappingId field value
func (o *CallTagMapping) GetCallTagMappingId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CallTagMappingId
}

// GetCallTagMappingIdOk returns a tuple with the CallTagMappingId field value
// and a boolean to check if the value has been set.
func (o *CallTagMapping) GetCallTagMappingIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallTagMappingId, true
}

// SetCallTagMappingId sets field value
func (o *CallTagMapping) SetCallTagMappingId(v int32) {
	o.CallTagMappingId = v
}

// GetCall returns the Call field value
func (o *CallTagMapping) GetCall() Call {
	if o == nil {
		var ret Call
		return ret
	}

	return o.Call
}

// GetCallOk returns a tuple with the Call field value
// and a boolean to check if the value has been set.
func (o *CallTagMapping) GetCallOk() (*Call, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Call, true
}

// SetCall sets field value
func (o *CallTagMapping) SetCall(v Call) {
	o.Call = v
}

// GetTag returns the Tag field value
func (o *CallTagMapping) GetTag() CallTag {
	if o == nil {
		var ret CallTag
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *CallTagMapping) GetTagOk() (*CallTag, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *CallTagMapping) SetTag(v CallTag) {
	o.Tag = v
}

func (o CallTagMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallTagMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["call_tag_mapping_id"] = o.CallTagMappingId
	toSerialize["call"] = o.Call
	toSerialize["tag"] = o.Tag
	return toSerialize, nil
}

func (o *CallTagMapping) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"call_tag_mapping_id",
		"call",
		"tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCallTagMapping := _CallTagMapping{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCallTagMapping)

	if err != nil {
		return err
	}

	*o = CallTagMapping(varCallTagMapping)

	return err
}

type NullableCallTagMapping struct {
	value *CallTagMapping
	isSet bool
}

func (v NullableCallTagMapping) Get() *CallTagMapping {
	return v.value
}

func (v *NullableCallTagMapping) Set(val *CallTagMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableCallTagMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableCallTagMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallTagMapping(val *CallTagMapping) *NullableCallTagMapping {
	return &NullableCallTagMapping{value: val, isSet: true}
}

func (v NullableCallTagMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallTagMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


