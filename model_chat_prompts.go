/*
proxima-core-engine

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChatPrompts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatPrompts{}

// ChatPrompts struct for ChatPrompts
type ChatPrompts struct {
	Id int32 `json:"id"`
	// Metadata
	Metadata interface{} `json:"metadata,omitempty"`
	CreatedAt NullableString `json:"created_at"`
	DateTimeCreatedAt NullableString `json:"date_time_created_at"`
	// The timestamp of the chat.
	Timestamp NullableTime `json:"timestamp"`
	UpdatedAt NullableTime `json:"updated_at"`
	ChatDescription string `json:"chat_description"`
	// Linking it to the knowledgebase
	Knowledgebase int32 `json:"knowledgebase"`
}

type _ChatPrompts ChatPrompts

// NewChatPrompts instantiates a new ChatPrompts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatPrompts(id int32, createdAt NullableString, dateTimeCreatedAt NullableString, timestamp NullableTime, updatedAt NullableTime, chatDescription string, knowledgebase int32) *ChatPrompts {
	this := ChatPrompts{}
	this.Id = id
	this.CreatedAt = createdAt
	this.DateTimeCreatedAt = dateTimeCreatedAt
	this.Timestamp = timestamp
	this.UpdatedAt = updatedAt
	this.ChatDescription = chatDescription
	this.Knowledgebase = knowledgebase
	return &this
}

// NewChatPromptsWithDefaults instantiates a new ChatPrompts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatPromptsWithDefaults() *ChatPrompts {
	this := ChatPrompts{}
	return &this
}

// GetId returns the Id field value
func (o *ChatPrompts) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChatPrompts) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChatPrompts) SetId(v int32) {
	o.Id = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatPrompts) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatPrompts) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ChatPrompts) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *ChatPrompts) SetMetadata(v interface{}) {
	o.Metadata = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChatPrompts) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatPrompts) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *ChatPrompts) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// GetDateTimeCreatedAt returns the DateTimeCreatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChatPrompts) GetDateTimeCreatedAt() string {
	if o == nil || o.DateTimeCreatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.DateTimeCreatedAt.Get()
}

// GetDateTimeCreatedAtOk returns a tuple with the DateTimeCreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatPrompts) GetDateTimeCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateTimeCreatedAt.Get(), o.DateTimeCreatedAt.IsSet()
}

// SetDateTimeCreatedAt sets field value
func (o *ChatPrompts) SetDateTimeCreatedAt(v string) {
	o.DateTimeCreatedAt.Set(&v)
}

// GetTimestamp returns the Timestamp field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ChatPrompts) GetTimestamp() time.Time {
	if o == nil || o.Timestamp.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatPrompts) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// SetTimestamp sets field value
func (o *ChatPrompts) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ChatPrompts) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatPrompts) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *ChatPrompts) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetChatDescription returns the ChatDescription field value
func (o *ChatPrompts) GetChatDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChatDescription
}

// GetChatDescriptionOk returns a tuple with the ChatDescription field value
// and a boolean to check if the value has been set.
func (o *ChatPrompts) GetChatDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChatDescription, true
}

// SetChatDescription sets field value
func (o *ChatPrompts) SetChatDescription(v string) {
	o.ChatDescription = v
}

// GetKnowledgebase returns the Knowledgebase field value
func (o *ChatPrompts) GetKnowledgebase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Knowledgebase
}

// GetKnowledgebaseOk returns a tuple with the Knowledgebase field value
// and a boolean to check if the value has been set.
func (o *ChatPrompts) GetKnowledgebaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Knowledgebase, true
}

// SetKnowledgebase sets field value
func (o *ChatPrompts) SetKnowledgebase(v int32) {
	o.Knowledgebase = v
}

func (o ChatPrompts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatPrompts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["created_at"] = o.CreatedAt.Get()
	toSerialize["date_time_created_at"] = o.DateTimeCreatedAt.Get()
	toSerialize["timestamp"] = o.Timestamp.Get()
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	toSerialize["chat_description"] = o.ChatDescription
	toSerialize["knowledgebase"] = o.Knowledgebase
	return toSerialize, nil
}

func (o *ChatPrompts) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"date_time_created_at",
		"timestamp",
		"updated_at",
		"chat_description",
		"knowledgebase",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatPrompts := _ChatPrompts{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatPrompts)

	if err != nil {
		return err
	}

	*o = ChatPrompts(varChatPrompts)

	return err
}

type NullableChatPrompts struct {
	value *ChatPrompts
	isSet bool
}

func (v NullableChatPrompts) Get() *ChatPrompts {
	return v.value
}

func (v *NullableChatPrompts) Set(val *ChatPrompts) {
	v.value = val
	v.isSet = true
}

func (v NullableChatPrompts) IsSet() bool {
	return v.isSet
}

func (v *NullableChatPrompts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatPrompts(val *ChatPrompts) *NullableChatPrompts {
	return &NullableChatPrompts{value: val, isSet: true}
}

func (v NullableChatPrompts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatPrompts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


